xviii TABLE OF CONTENTS
CHAPTER 22 SOFTWARE TESTING STRATEGIES  466
22.1 A Strategic Approach to Software Testing  466
22.1.1 Veriﬁ cation and Validation  468

22.1.2 Organizing for Software Testing  468

22.1.3 Software Testing Strategy—The Big Picture  469

22.1.4 Criteria for Completion of Testing  472
22.2 Strategic Issues  472

22.3 Test Strategies for Conventional Software  473
22.3.1 Unit Testing  473

22.3.2 Integration Testing  475
22.4 Test Strategies for Object-Oriented Software  481
22.4.1 Unit Testing in the OO Context  481

22.4.2 Integration Testing in the OO Context  481
22.5 Test Strategies for WebApps  482

22.6 Test Strategies for MobileApps  483

22.7 Validation Testing  483
22.7.1 Validation-Test Criteria  484

22.7.2 Conﬁ guration Review  484

22.7.3 Alpha and Beta Testing  484
22.8 System Testing  486
22.8.1 Recovery Testing  486

22.8.2 Security Testing  486

22.8.3 Stress Testing  487

22.8.4 Performance Testing  487

22.8.5 Deployment Testing  487
22.9 The Art of Debugging  488
22.9.1 The Debugging Process  488

22.9.2 Psychological Considerations  490

22.9.3 Debugging Strategies  491

22.9.4 Correcting the Error  492
22.10 Summary  493

PROBLEMS AND POINTS TO PONDER  493FURTHER READINGS AND INFORMATION SOURCES  494CHAPTER 23 TESTING CONVENTIONAL APPLICATIONS  496
23.1 Software Testing Fundamentals  497

23.2 Internal and External Views of Testing  499

23.3 White-Box Testing  500

23.4 Basis Path Testing  500
23.4.1 Flow Graph Notation  500

23.4.2 Independent Program Paths  502

23.4.3 Deriving Test Cases  504

23.4.4 Graph Matrices  506
23.5 Control Structure Testing  507

23.6 Black-Box Testing  509
23.6.1 Graph-Based Testing Methods  509

23.6.2 Equivalence Partitioning  511

23.6.3 Boundary Value Analysis  512

23.6.4 Orthogonal Array Testing  513

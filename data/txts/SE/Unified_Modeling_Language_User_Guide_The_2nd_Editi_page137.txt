 Terms and Concepts An interface is a collection of operations that are used to specify a service of a class or a component. A type is a stereotype of a class used to specify a domain of objects, together with the operations (but not the methods) applicable to the object. A role is the behavior of an entity participating in a particular context. Graphically, an interface is rendered as a circle; in its expanded form, an interface may be rendered as a stereotyped class in order to expose its operations and other properties. Use cases are discussed in Chapter 16; subsystems are discussed in Chapter 31. Note Interfaces may also be used to specify a contract for a use case or subsystem.  Names An interface name must be unique within its enclosing package, as discussed in Chapter 12. Every interface must have a name that distinguishes it from other interfaces. A name is a textual string. That name alone is known as a simple name; a path name is the interface name prefixed by the name of the package in which that interface lives. An interface may be drawn showing only its name, as in Figure 11-2: Figure 11-2 Simple and Path Names 
CHAPTER 6  
HUMAN ASPECTS OF SOFTWARE ENGINEERING
 93activities; and a  backup engineer,
 
 who supports the senior engineer in her activi-
ties and can replace the senior engineer with minimum loss in project continuity. 

The chief programmer may be served by one or more specialists (e.g., telecom-
munications expert, database designer), support staff (e.g., technical writers, 
clerical personnel), and a software librarian.  As a counterpoint to the chief programmer team structure, Constantine’s random 
paradigm [Con93] suggests a software team with creative independence whose ap-
proach to work might best be termed  innovative anarchy.
 
 Although the free- 
spirited 
approach to software work has appeal, channeling creative energy into a high-
performance team must be a central goal of a software engineering organization. 
 
 
 
  
 
Team Structure  
 
Team Structure 
 
 
 
 
 
 
 
 
The scene:  Doug Miller’s ofﬁ
 ce 
prior to the initiation of the  SafeHome 
 software project.    
 
 
 
 
 
The players:  Doug Miller (manager of the  
SafeHome 
 software engineering team) and Vinod Raman, Jamie 
Lazar, and other members of the product software 

engineering team.    
 
 
 
 
 
The conversation:  
   
 
 
 
 
 
Doug:  Have you guys had a chance to look over 
the preliminary info on  
SafeHome 
 that marketing has prepared?    
 
 
 
 
 
Vinod (nodding and looking at his team-mates):  Yes. But we have a bunch of questions. 
   
 
 
 
 
 
Doug:  Let’s hold onto that for a moment. I’d like to 
talk about how we’re going to structure the team, who’s 

   
 
 
 
 
 
Jamie:  I’m really into the agile philosophy, Doug. I 
think we should be a self-organizing team.    
 
 
 
 
 
Vinod:  I agree. Given the tight time line and some of 
the uncertainty, and that fact that we’re all really compe-

tent [laughs], that seems like the right way to go.    
 
 
 
 
 
Doug:  That’s okay with me, but you guys know the drill. 
   
 
 
 
 
 
Jamie (smiling and talking as if she was reciting something):  We make tactical decisions, 
about who does what and when, but it’s our responsibil-

ity to get product out the door on time.    
 
 
 
 
 
Vinod:  And with quality. 
   
 
 
 
 
 
Doug:  Exactly. But remember there are constraints. 
Marketing deﬁ nes the software increments to be 
 produced—in consultation with us, of course.    
 
 
 
 
 
Jamie:  And? 
  
  
SAFEHOME  
 
 
 
 
 
 
 6.5 A
GILE TEAMS    
 
Over the past decade, agile software development (Chapter 5) has been sug-gested as an antidote to many of the problems that have plagued software proj-
ect work. To review, the agile philosophy encourages customer satisfaction and 

early incremental delivery of software, small highly motivated project teams, 
informal methods, minimal software engineering work products, and overall 
development simplicity. 
  
6.5.1 The Generic Agile Team 
 
The small, highly motivated project team, also called an  agile team,
 
 adopts 
many of the characteristics of successful software project teams discussed in the pre22126_ch06_087-102.indd   93pre22126_ch06_087-102.indd   9313/12/13   6:10 PM13/12/13   6:10 PM
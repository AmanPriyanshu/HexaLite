xxvii When computer software succeeds—when it meets the needs of the people who 
use it, when it performs ﬂ awlessly over a long period of time, when it is easy 
to modify and even easier to use—it can and does change things for the better. But 
when software fails—when its users are dissatisﬁ ed, when it is error prone, when it 

is difﬁ cult to change and even harder to use—bad things can and do happen. We all 

want to build software that makes things better, avoiding the bad things that lurk in 
the shadow of failed efforts. To succeed, we need discipline when software is designed 
and built. We need an engineering approach.  It has been almost three and a half decades since the ﬁ rst edition of this book 
was written. During that time, software engineering has evolved from an obscure idea 
practiced by a relatively small number of zealots to a legitimate engineering disci-
pline. Today, it is recognized as a subject worthy of serious research, conscientious 
study, and tumultuous debate. Throughout the industry, software engineer has re-
placed programmer as the job title of preference. Software process models, software 
engineering methods, and software tools have been adopted successfully across a 
broad spectrum of industry segments.  Although managers and practitioners alike recognize the need for a more disci-plined approach to software, they continue to debate the manner in which discipline 
is to be applied. Many individuals and companies still develop software haphazardly, 
even as they build systems to service today’s most advanced technologies. Many pro-
fessionals and students are unaware of modern methods. And as a result, the quality 
of the software that we produce suffers, and bad things happen. In addition, debate 
and controversy about the true nature of the software engineering approach continue. 
The status of software engineering is a study in contrasts. Attitudes have changed, 
progress has been made, but much remains to be done before the discipline reaches 
full maturity.  The eighth edition of  Software Engineering: A Practitioner’s Approach  is intended to serve as a guide to a maturing engineering discipline. The eighth edition, like the 
seven editions that preceded it, is intended for both students and practitioners, re-
taining its appeal as a guide to the industry professional and a comprehensive intro-
duction to the student at the upper-level undergraduate or ﬁ rst-year graduate level. 
 The eighth edition is considerably more than a simple update. The book has been revised and restructured to improve pedagogical ﬂ ow and emphasize new and im-

portant software engineering processes and practices. In addition, we have further 
enhanced the popular “support system” for the book, providing a comprehensive set 
of student, instructor, and professional resources to complement the content of the 
book. These resources are presented as part of a website (www.mhhe.com/pressman) 
speciﬁ cally designed for  
Software Engineering: A Practitioner’s Approach.  
         
The Eighth Edition.   The 39 chapters of the eighth edition are organized into ﬁ ve parts. This organization better compartmentalizes topics and assists instructors who 
may not have the time to complete the entire book in one term.   P
REFACE
 
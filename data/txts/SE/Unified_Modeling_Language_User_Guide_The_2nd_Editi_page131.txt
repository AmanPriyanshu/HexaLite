 Note Sometimes you'll want to have the same properties for several different association classes. However, you can't attach an association class to more than one association, since an association class is the association itself. To achieve that effect, define a class (C) and then have each association class that needs those features inherit from C or use C as the type of an attribute.  The UML's extensibility mechanisms are discussed in Chapter 6; the UML's defined stereotypes and constraints are discussed in Appendix B. Constraints   These simple and advanced properties of associations are sufficient for most of the structural relationships you'll encounter. However, if you want to specify a shade of meaning, the UML defines five constraints that may be applied to association relationships. First, you can distinguish if the association is real or conceptual. 1. implicit  Specifies that the relationship is not manifest but, rather, is only conceptual For example, if you have an association between two base classes, you can specify that same association between two children of those base classes (because they inherit the relationships of the parent classes). You'd mark it as implicit, because it's not manifest separately but, rather, is implicit from the relationship that exists between the parent classes. Second, you can specify that the objects at one end of an association (with a multiplicity greater than one) are ordered or unordered. 2. ordered Specifies that the set of objects at one end of an association are in an explicit order For example, in a User/Password association, the Passwords associated with the User might be kept in a least-recently used order, and would be marked as ordered. 
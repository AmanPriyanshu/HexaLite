˜˚˝˜˜˚˛˝˙ˆˇ˘
˜change anticipation, 61change control board (CCB), 748Œ49
change management, 97, 731, 745Œ50, 753agile methods and, 97, 748, 750
change requests, 747Œ50
dependability and, 299
development environments and, 217
requirements and, 111, 130Œ34change proposals, 90, 258Œ59
change request form (CRF), 747Œ48
change tolerance, 61
characteristic error checking, 359Œ60
check array bounds, 330
checking requirements, 317
checklists, 403, 713Œ714
checksums, 745
circular buffer, 616Œ17
class diagrams, 141, 149Œ51, 163
class identification, 202Œ04
Cleanroom process, 230, 332
client-server architecture, 180Œ82, 428, 501, 503Œ06, 517client-server systems, 499Œ501, 517
clouds, 25, 27, 532
COBOL code, 263
COCOMO II modeling, 276, 476, 686Œ96application composition model, 688Œ89
cost drivers, 692
early design model, 689Œ90
post-architectural level, 692Œ94
project duration and staffing, 694Œ96
reuse model, 690Œ92code coverage, 243Œ44, 252
code inspection and review, 83, 715
Code of Ethics and Professional Practice (software engineering), 29Œ30codelines, 734, 735, 736, 739
collaborative systems, 588
collective ownership, 78
COM platform, 466
Common Intermediate Language (CIL), 470Œ71communicationdata management layer and, 292
message exchange, 496Œ97, 526Œ29, 537
stakeholder, 169communication latency, 218
compartmentalization, 399
competence, 28completeness, 107, 129
complexity, 18, 93Œ96, 274Œ75, 278, 584Œ87, 606governance, 586Œ87, 588Œ90, 606
large systems, 93Œ96
maintenance prediction and, 274Œ75
management, 585, 586Œ87, 587Œ90, 606
reductionism for systems, 590Œ93, 606
refactoring, 278
scaling agile methods and, 93Œ96
system releases, 751Œ52
systems of systems (SoS), 584Œ87, 606
technical, 585, 586Œ87, 590compliance to software regulation, 294Œ95
component-based software engineering (CBSE), 442, 464Œ489component certification, 474, 477
component management, 474, 476
development for reuse, 473, 474Œ77
development with reuse, 473, 477Œ80
middleware and, 465, 472Œ73
service-oriented software v., 466Œ67component level (reuse), 214
components (software), 52Œ53, 188, 190, 295, 424, 465Œ73, 487, 526Œ29architectural design and, 172
communications, 172, 218, 526Œ29
composition, 480Œ86, 487
defined, 465, 467, 487
deployment, 471, 472Œ73
design and selection of, 57, 424, 452
external, 330Œ31
implementation, 465, 466, 471Œ72, 475, 487
incompatibility, 481Œ83
interfaces, 208Œ209, 237Œ239, 465, 468Œ69
measurement (analysis), 722Œ23
models, 470Œ73, 487
open-source, 220Œ21
platforms for, 466Œ67
remote procedure calls (RPCs) for, 470, 471reuse, 52Œ53, 212, 214, 221, 438Œ439, 452, 468, 487services v., 521
service-oriented architectures (SOA), 526Œ29
testing, 59, 232, 237Œ239
timeouts, 330Œ31
timing errors, 238Œ239components (system), procurement (acquisition) of, 567Œ68
CHAPTER 7  
PRINCIPLES THAT GUIDE PRACTICE
 107 
 
 
 
 
 
 
Principle 2. 
  Focus on quality at every step.Focus on quality at every step. 
 The exit condition for every process activity, action, and task should focus on the quality of the work 

product that has been produced.    
 
 
 
 
 
Principle 3. 
  Be ready to adapt.Be ready to adapt.
 
 Process is not a religious experience, and dogma has no place in it. When necessary, adapt your approach to con-

straints imposed by the problem, the people, and the project itself.    
 
 
 
 
 
Principle 4. 
  Build an effective team.Build an effective team. 
 
 practice are important, but the bottom line is people. Build a self- organizing 
team that has mutual trust and respect.  2  
 
 
   
 
 
 
 
 
Principle 5. 
  Establish mechanisms for communication and coordination.  Establish mechanisms for communication and coordination. 
 Projects fail because important information falls into the cracks and/
or stakeholders fail to coordinate their efforts to create a successful end 
product. These are management issues and they must be addressed.  
 
 
   
 
 
 
 
 
Principle 6. 
  Manage change.Manage change. 
 The approach may be either formal or infor-
mal, but mechanisms must be established to manage the way changes are 
requested, assessed, approved, and implemented.    
 
 
 
 
 
Principle 7. 
  Assess risk.Assess risk. 
 Lots of things can go wrong as software is being developed. It’s essential that you establish contingency plans. Some of 

these contingency plans will form the basis for security engineering tasks 
(Chapter 27).    
 
 
 
 
 
Principle 8. 
  Create work products that provide value for others.Create work products that provide value for others.
 
 Create only those work products that provide value for other process activities, 
actions, or tasks. Every work product that is produced as part of software 
engineering practice will be passed on to someone else. A list of required 
functions and features will be passed along to the person (people) who will 
develop a design, the design will be passed along to those who generate 
code, and so on. Be sure that the work product imparts the necessary 
 information without ambiguity or omission.    
Part 4 of this book focuses on project and process management issues and con-siders various aspects of each of these principles in some detail.   
 
7.2.2  Principles That Guide  
 
Practice  
  
Software engineering practice has a single overriding goal—to deliver on-time, high-quality, operational software that contains functions and features that 

meet the needs of all stakeholders. To achieve this goal, you should adopt a set 

of core principles that guide your technical work. These principles have merit 
regardless of the analysis and design methods that you apply, the construction 

techniques (e.g., programming language, automated tools) that you use, or the   uote:      “The truth of the 
matter is that you 
always know the 
right thing to do. 
The hard part is 
doing it.”  General H. 
Norman Schwarzkopf 
  
 
 
 
2  The characteristics of effective software teams have been discussed in Chapter 6. 
pre22126_ch07_103-130.indd   107pre22126_ch07_103-130.indd   10713/12/13   6:11 PM13/12/13   6:11 PM
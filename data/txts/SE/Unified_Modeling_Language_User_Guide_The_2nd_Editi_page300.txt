 Note The UML is mainly intended for modeling software-intensive systems, although the UML, in conjunction with textual hardware modeling languages, such as VHDL, can be quite expressive for modeling hardware systems. The UML is also sufficiently expressive for modeling the topologies of stand-alone, embedded, client/server, and distributed systems. Terms and Concepts A node is a physical element that exists at run time and represents a computational resource, generally having at least some memory and, often, processing capability. Graphically, a node is rendered as a cube. Names A node name must be unique within its enclosing package, as discussed in Chapter 12. Every node must have a name that distinguishes it from other nodes. A name is a textual string. That name alone is known as a simple name; a path name is the node name prefixed by the name of the package in which that node lives. A node is typically drawn showing only its name, as in Figure 26-2. Just as with classes, you may draw nodes adorned with tagged values or with additional compartments to expose their details. Figure 26-2 Simple and Extended Nodes 
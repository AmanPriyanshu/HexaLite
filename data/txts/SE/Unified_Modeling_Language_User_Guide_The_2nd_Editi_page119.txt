· Specify the pre- and postconditions of each operation, plus the invariants of the class as a whole, using a formal language such as OCL. Specifying the body of a method is discussed in Chapter 3; specifying the semantics of an operation is discussed in Chapter 19; state machines are discussed in Chapter 21; collaborations are discussed in Chapter 27. OCL is discussed in The Unified Modeling Language Reference Manual. Pragmatically, you'll end up doing some combination of these approaches for the different abstractions in your system. Note When you specify the semantics of a class, keep in mind whether your intent is to specify what the class does or how it does it. Specifying the semantics of what a class does represents its public, outside view; specifying the semantics of how a class does it represents its private, inside view. You'll want to use a mixture of these two views, emphasizing the outside view for clients of the class and emphasizing the inside view for those who implement the class. Hints and Tips When you model classifiers in the UML, remember that there is a wide range of building blocks at your disposal, from interfaces to classes to components, and so on. You must choose the one that best fits your abstraction. A well-structured classifier · Has both structural and behavioral aspects. · Is tightly cohesive and loosely coupled. · Exposes only those features necessary for clients to use the class, and hides all others. · Is unambiguous in its intent and semantics. · Is not so overly specified that it eliminates all degrees of freedom for its implementers. · Is not so underspecified that it renders the meaning of the classifier ambiguous. When you draw a classifier in the UML, · Show only those properties of the classifier that are important to understand the abstraction in its context. · Chose a stereotyped version that provides the best visual cue to the intent of the classifier. Chapter 10. Advanced Relationships In this chapter · Advanced dependency, generalization, association, realization, and refinement relationships · Modeling webs of relationships · Creating webs of relationships 
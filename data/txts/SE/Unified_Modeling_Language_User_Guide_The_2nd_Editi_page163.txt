active classes that reify a process or thread, and in turn you can distinguish an instance of an active class, as in Figure 13-4. Figure 13-4 Active Objects  Interaction diagrams are discussed in Chapter 18. Note Most often, you'll use active objects in the context of interaction diagrams that model multiple flows of control. Each active object represents the root of a flow of control and may be used to name distinct flows.  Links are discussed in Chapters 14 and 15; class scoped attributes and operations are discussed in Chapter 9. There are two other elements in the UML that may have instances. The first is a link. A link is a semantic connection among objects. An instance of an association is therefore a link. A link is rendered as a line, just like an association, but it can be distinguished from an association because links only connect objects. The second is a class-scoped attribute and operation. A class-scoped feature is in effect an object in the class that is shared by all instances of the class. Standard Elements The UML's extensibility mechanisms are discussed in Chapter 6. All of the UML's extensibility mechanisms apply to objects. Usually, however, you don't stereotype an instance directly, nor do you give it its own tagged values. Instead, an object's stereotype and tagged values derive from the stereotype and tagged values of its associated abstraction. For example, as Figure 13-5 shows, you can explicitly indicate an object's stereotype, as well as its abstraction. Figure 13-5 Stereotyped Objects  
an existing system and may not consider it worthwhile to absorb the cost of changing 
to a new release. New releases of the system cannot, therefore, rely on the installation 

of previous releases. To illustrate this problem, consider the following scenario:1. Release 1 of a system is distributed and put into use.2. Release 2 requires the installation of new data files, but some customers do not need the facilities of release 2 and so remain with release 1.3. Release 3 requires the data files installed in release 2 and has no new data files 
of its own.The software distributor cannot assume that the files required for release 3 have already been installed in all sites. Some sites may go directly from release 1 to 

release 3, skipping release 2. Some sites may have modified the data files associated 
with release 2 to reflect local circumstances. Therefore, the data files must be distrib-
uted and installed with release 3 of the system.One benefit of delivering software as a service (SaaS) is that it avoids all of these 
problems. It simplifies both release management and system installation for customers. 

The software developer is responsible for replacing the existing release of a system 

with a new release, which is made available to all customers at the same time. However, 

this approach requires that all servers running the services be updated at the same time. 

To support server updates, specialized distribution management tools such as Puppet 

(Loope 2011) have been developed for ﬁpushingﬂ new software to servers.˜˝

˜˝

˜˝
˜˝
˜˝˝

˜˝

˜˚˛˝˙ˆˇ˘˜˜˚˜˜˜˜˜˜

 Terms and Concepts A system, possibly decomposed into a collection of subsystems, is a set of elements organized to accomplish a purpose and described by a set of models, possibly from different viewpoints. A subsystem is a grouping of elements of which some constitute a specification of the behavior offered by other contained elements. Graphically, a system and a subsystem are rendered as a stereotyped package icon. A modelis a simplification of reality, an abstraction of a system, created in order to better understand the system. A view is a projection of a model, which is seen from one perspective or vantage point and omits entities that are not relevant to this perspective. Systems and Subsystems A system is the thing itself that you are developing and for which you build models. A system encompasses all the artifacts that constitute that thing, including all its models and modeling elements, such as classes, interfaces, components, nodes, and their relationships. Everything you need to visualize, specify, construct, and document a system is part of that system, and everything you don't need to visualize, specify, construct, and document a system lies outside that system. Stereotypes are discussed in Chapter 6; packages are discussed in Chapter 12; classes are discussed in Chapters 4and 9; use cases are discussed in Chapter 16; state machines are discussed in Chapter 21; collaborations are discussed in Chapter 27. In the UML, a system is rendered as a stereotyped package, as shown in the previous figure. As a stereotyped package, a system owns elements. If you zoom inside a system, you'll see all its models and individual modeling elements (including diagrams), perhaps further decomposed into subsystems. As a classifier, a system may have instances (a system may be deployed in multiple instances in the real world), attributes and operations (actors outside the system may act on the system as a whole), use cases, state machines, and collaborations, all of which may specify the behavior of the system. A system may even realize interfaces, which is important when you are constructing systems of systems. A subsystem is simply a part of a system, and is used to decompose a complex system into nearly independent parts. A system at one level of abstraction may be a subsystem of a system at a higher level of abstraction. In the UML, a subsystem is rendered as a stereotyped package icon, also shown in the previous figure. Semantically, a subsystem is both a kind of package, as well as a kind of classifier. 
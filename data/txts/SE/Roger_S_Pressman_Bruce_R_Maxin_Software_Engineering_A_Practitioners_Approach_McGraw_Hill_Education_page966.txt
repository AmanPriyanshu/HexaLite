936 INDEX   Management,  
  myths,   23  

  project,   684  

  risk,   451, 777  

  security,   451  

  spectrum,   685   
   Manual test integration tools,  
 614   
   Maturity level,   831   

   Maturity models,   821   

   Measurement,   654, 708  
  principles,   656   
   Measures,   654  
  availability,   461  

  direct,   708  

  direct,   708  

  reliability,   460   
   Meetings,  
  casual,   439  

  review,   441   
   Melding problem and process,  
 695   
   Messages,   895   

   Methods (see also, Operations),  
 16, 893   
   Metrics,   654  
  architectural design,   663  

  arguments,   720  

  attributes,   654, 657  

  baseline,   720  

  business goals,   724  

  collection,   721  

  small organizations,   721  

  program establishment,   722  

  class-oriented,   667  

  component-level,   671  

  design,   663  

  function-based,   659, 710  

  LOC-based,   712  

  MobileApp design,   673  

  object-oriented,   666, 713  

  private,   706  

  process,   704  

  productivity,   712  
  project,   707  

  public,   706  

  quality,   456  

  requirements model,   659  

  reviews,   534  

  size-oriented,   709  

  software quality,   716  

  source code,   675  

  speciﬁ
 cation quality, 
  663  
  testing,   676  

  use case,   714  

  user interface design,   672  

  WebApp,   714  

  WebApp design,   673   
   Middleware,   405   

   MobileApps (mobile 
applications),   9  
  architectural design of,   274  
  best design practices,   401  

  checklist,   570  

  component-level design,   306  

  context aware,   399  

  design,   391  

  design challenges,   392  

  design mistakes,   401  

  design metrics,   673  

  development activities,   395  

  interface design,   398  

  patterns,   366  

  quality checklist,   397  

  real-time testing,   578  

  requirements modeling,   214  

  SCM,   640  

  software engineering,   407  

  stress testing,   573  

  test matrix,   572  

  testing,   483  

  testing guidelines,   568  

  testing strategies,   569  

  testing tools,   579  

  tools,   404  

  usability testing,   575   
   Mobility environments,   403   

   Model-based testing,   514   

   Model-driven software 
development,   853   
   Model-View-Controller (MVC),  
 384   
   Model,  
  certiﬁ
 cation,   612  
  COCOMO II,   744  

  component,   612  

  sampling,   612  

  security,   590   
   Modeling,   17  
  agile,   80  

  CRC,   192  

  data ﬂ
 ow,   511  
  ﬁ
 nite state, 
  511  
  principles,   114  

  scenario-based,   173  

  security,   590  
  threat,   594  

  timing,   511  

  transaction,   511   
   Models  
  behavioral,   203  

  design,   243  

  object-oriented,   525  

  requirements,   167   
   Modularity,   234   

   Module (see also, Component),  
 288   
   MOI leadership model,   688   

   Mongolian horde concept,   24   

   MOOD metrics suite,   670   

   Multiple class testing,   534   

   Multiplicity,   872   

   Myths,   23  
  customer,   24  
  management,   23  

  practitioner,   25       
   Navigation,  
  semantic unit,   387  

  semantics,   385  

  syntax,   387   
   Navigation modeling,   220   

   Navigation testing,   556   

   Negligence,   425   

   Negotiation,   135, 159       

   Object (see also, Class),   892   

   Object constraint language 
(OCL),   887, 901  
  example of, 903 

notation,   902   
   Object-oriented  
  analysis,   172, 184  

  design metrics,   666  

  integration testing,   529  

  metrics,   713  

  model consistency,   526  

  models,   525  

  OOA model correctness,   525  

  OOD model correctness,   525  

  project estimation,   746  

  software,   481  

  test case design,   530  

  testing strategies,   528  

  unit testing,   528  

  validation testing,   529         
   OO metrics, Lorenzz and Kidd,  
 671   
   Open paradigm team,   689   

   Open source,   848   

   Open world software,   846   

   Open-closed principle,   292   

   Operations (see also Methods),  
 189, 893   
   Organizational paradigms,   92   

   Orthogonal array testing,   513   

   Outsourcing,   750       

   Pair programming,   75, 440   

   Partition testing,   533   

   Partitioning,   694   

   Pattern organizing table,   358   

   Patterns,   109  
  analysis,   157, 207  

  architectural,   263, 278, 359  

  component-level,   360  

  context,   348  

  describing,   352  

  design,   348  

  example of,   209  

  interface design,   362  

  kinds of,   349  

  languages,   353  

  MobileApps,   366  

  process,   35  

  repository,   353, 360  

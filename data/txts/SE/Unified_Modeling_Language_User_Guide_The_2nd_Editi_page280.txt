interactions model the behavior of a society of objects working together, a statechart diagram models the behavior of a single object over its lifetime. Whereas an activity diagram models the flow of control from activity to activity, a statechart diagram models the flow of control from event to event. Modeling thelifetime of an object is discussed in Chapter 21. When you model the behavior of a reactive object, you essentially specify three things: the stable states in which that object may live, the events that trigger a transition from state to state, and the actions that occur on each state change. Modeling the behavior of a reactive object also involves modeling the lifetime of an object, starting at the time of the object's creation and continuing until its destruction, highlighting the stable states in which the object may be found. Time andspace are discussed in Chapter 23. A stable state represents a condition in which an object may exist for some identifiable period of time. When an event occurs, the object may transition from state to state. These events may also trigger self- and internal transitions, in which the source and the target of the transition are the same state. In reaction to an event or a state change, the object may respond by dispatching an action. Note When you model the behavior of a reactive object, you can specify its action by tying it to a transition or to a state change. In technical terms, a state machine whose actions are all attached to transitions is called a Mealy machine; a state machine whose actions are all attached to states is called a Moore machine. Mathematically, the two styles have equivalent power. In practice, you'll typically develop statechart diagrams that use a combination of Mealy and Moore machines.  To model a reactive object, Pre- andpostconditions are discussed in Chapter 10; interfaces are discussed in Chapter 11. · Choose the context for the state machine, whether it is a class, a use case, or the system as a whole. · Choose the initial and final states for the object. To guide the rest of your model, possibly state the pre- and postconditions of the initial and final states, respectively. · Decide on the stable states of the object by considering the conditions in which the object may exist for some identifiable period of time. Start with the high-level states of the object and only then consider its possible substates. · Decide on the meaningful partial ordering of stable states over the lifetime of the object. · Decide on the events that may trigger a transition from state to state. Model these events as triggers to transitions that move from one legal ordering of states to another. · Attach actions to these transitions (as in a Mealy machine) and/or to these states (as in a Moore machine). · Consider ways to simplify your machine by using substates, branches, forks, joins, and history states. 
˜˛˘˜˜˚˛˝˙ˆˇ˘
˜reuse (continued)architectural design and, 169CBSE for, 473, 474Œ77CBSE with, 473, 477Œ80
component selection and design, 57
components, 52Œ53, 212, 214, 221, 438Œ439, 452, 468, 487costs of, 214, 439
design patterns, 209Œ10, 212, 442, 444
engineering applications of, 26, 28
generator-based, 443
implementation and, 212, 213Œ15
integration and configuration of, 52Œ54
integration problems, 459Œ60
landscape, 340Œ443
levels of, 213Œ14
object and function, 438
process model for, 52Œ53
software development tools, 53
software product lines, 442, 446Œ52
system features and, 46reuse-based software engineering, 53Œ54, 438
reuse model, 690Œ92
reverse engineering, 277
reverse planning, 680
reviews, 130, 229, 239, 710Œ14checklists, 713Œ14
code, 83, 715
hazard register for, 355
inspections and, 229, 710Œ14, 727
program inspections, 713Œ14
quality management (QM), 710Œ14, 727
requirements validation, 130
review process, 711Œ13
safety, 354, 355
verification and validation using, 229rework, 49, 56, 61, 73, 75, 84, 129
riskacceptable, 347Œ48
accidents (mishaps) and, 343Œ44, 347
analysis, 362, 648Œ49
as low as reasonably practical (ALARP), 347
defined, 343
redundancy and diversion for, 398indicators, 652
intolerable, 347
ranking types of, 649reduction, 351Œ52, 398security assessment, 381Œ82, 405
triangle, 347Œ48risk management, 644Œ52, 664identification of risk, 647Œ48
planning process, 650Œ51
processes, 645Œ47
product risks, 644Œ45
project risks, 644Œ45
risk analysis and, 648Œ49
risk monitoring, 651Œ52
strategies for, 650Œ81risk-based requirements specification, 344, 345
robot control system, 168
role replication (Scrum), 96
Ruby, 190, 444
RUP (Rational Unified Process), 46Œ47safety, 339Œ72, 379architectural design and, 172
assurance processes, 353Œ56
costs and, 357, 362Œ63
dependability and, 288, 299
engineering processes, 352Œ61
ethics and, 30Œ31
formal verification, 356Œ58
functional requirements, 344
hazard-driven requirements, 345, 368
hazards and, 342, 343, 345Œ351
model checking, 358Œ59, 368
regulation and compliance for, 294Œ95
regulators, 294Œ95, 361, 362
reliability and, 340Œ41
requirements, 344Œ52, 362
risks and, 343, 343Œ44, 347Œ48, 351Œ52
software certification, 355Œ56
static program analysis, 359Œ61, 368
terminology, 343safety cases, 361Œ67, 368development of, 362Œ63
organization of, 361Œ62
regulators for, 361, 362, 368
software safety arguments, 364Œ67
structured arguments, 363Œ364
You can achieve true concurrency in one of three ways: first, by distributing active objects across multiple nodes; second, by placing active objects on nodes with multiple processors; and third, by a combination of both methods.  Classes and Events Classes are discussed in Chapters 4 and 9. Active classes are just classes, albeit ones with a very special property. An active class represents an independent flow of control, whereas a plain class embodies no such flow. In contrast to active classes, plain classes are implicitly called passive because they cannot independently initiate control activity. Objects are discussed in Chapter 13 ; attributes and operations are discussed in Chapter 4 ; relationships are discussed in Chapters 4 and 10 ; extensibility mechanisms are discussed in Chapter 6 ; interfaces are discussed in Chapter 11. You use active classes to model common families of processes or threads. In technical terms, this means that an active object#an instance of an active class#reifies (is a manifestation of) a process or thread. By modeling concurrent systems with active objects, you give a name to each independent flow of control. When an active object is created, the associated flow of control is started; when the active object is destroyed, the associated flow of control is terminated. Active classes share the same properties as all other classes. Active classes may have instances. Active classes may have attributes and operations. Active classes may participate in dependency, generalization, and association (including aggregation) relationships. Active classes may use any of the UML's extensibility mechanisms, including stereotypes, tagged values, and constraints. Active classes may be the realization of interfaces. Active classes may be realized by collaborations, and the behavior of an active class may be specified by using state machines. State machines are discussed in Chapter 21 ; events are discussed in Chapter 20. In your diagrams, active objects may appear wherever passive objects appear. You can model the collaboration of active and passive objects by using interaction diagrams (including sequence and collaboration diagrams). An active object may appear as the target of an event in a state machine. Speaking of state machines, both passive and active objects may send and receive signal events and call events. Standard Elements The UML's extensibility mechanisms are discussed in Chapter 6. All of the UML's extensibility mechanisms apply to active classes. Most often, you'll use tagged values to extend active class properties, such as specifying the scheduling policy of the active class. The UML's standard elements are summarized in Appendix B. The UML defines two standard stereotypes that apply to active classes. 1. process  Specifies a heavyweight flow that can execute concurrently with other processes 
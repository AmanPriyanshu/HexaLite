Progress in software engineering over the last 50 years has been astonishing. Our 
societies could not function without large professional software systems. National 

utilities and infrastructureŠenergy, communications and transportŠall rely on 

complex and mostly reliable computer systems. Software has allowed us to explore 

space and to create the World Wide WebŠthe most significant information system 

in the history of mankind. Smartphones and tablets are ubiquitous and an entire ‚apps 

industry™ developing software for these devices has emerged in the past few years.Humanity is now facing a demanding set of challengesŠclimate change and 
extreme weather, declining natural resources, an increasing world population to be fed 

and housed, international terrorism, and the need to help elderly people lead satisfying 

and fulfilled lives. We need new technologies to help us address these challenges and, 

for sure, software will have a central role in these technologies. Software engineering 

is, therefore, critically important for our future on this planet. We have to continue to 

educate software engineers and develop the discipline so that we meet the demand for 

more software and create the increasingly complex future systems that we need.Of course, there are still problems with software projects. Systems are still some-times delivered late and cost more than expected. We are creating increasingly com-
plex software systems of systems and we should not be surprised that we encounter 
difficulties along the way. However, we should not let these problems conceal the 
real successes in software engineering and the impressive software engineering 

methods and technologies that have been developed.This book, in different editions, has now been around for over 30 years and this edi-tion is based around the essential principles that were established in the first edition:1. I write about software engineering as it is practiced in industry, without taking an evangelical position on particular approaches such as agile development or 
formal methods. In reality, industry mixes techniques such as agile and plan-
based development and this is reflected in the book.PREFACE

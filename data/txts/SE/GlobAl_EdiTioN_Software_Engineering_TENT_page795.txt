˜˚˛˝˙ˆˇ˘˜˜
safety-critical systems, 287, 340Œ44, 368certification of, 294, 302, 355Œ56control systems, 341Œ42
dependability and, 294, 302
development process and, 352Œ53
error-prone constructs and, 329
hazard-driven techniques, 342
primary safety-critical software, 341
process assurance and, 355Œ56
regulation and compliance for, 294, 353
risk triangle for, 347Œ48
secondary safety-critical software, 341Œ42
system failure and, 340Œ41safety reviews, 355
SAP, 21
Sarbanes Oxley accounting regulations, 51
scalability, 491, 492, 494, 514, 515Œ16
scale, software development and, 24
scaling agile methods, 88Œ97, 98
scenarioselicitation of requirements from, 118Œ20
testing, 246Œ47, 252
use cases, 125Œ26scheduling, 675Œ80, 696activity charts for, 678Œ80
project planning and, 675Œ80, 696
plan-driven projects, 675Œ76
presentation (visualizing), 676Œ80Scrum, 73, 78, 85Œ88, 96, 98
secure systems, 561
security, 24, 26, 373Œ407application, 374Œ375
architectural design and, 172, 388, 392Œ95assurance, 402Œ04
availability, 374, 375, 379
checklist, 403
confidentiality, 374
controls, 377, 378Œ79
dependability and, 22, 26, 288, 376Œ79
design for, 374, 388Œ402, 405
engineering, 373Œ407
failure, 397
guidelines, 396Œ401, 404
infrastructure, 374, 375Œ76
logging user actions, 398
operational, 374, 376
organizations and, 380Œ82
policies, 396Œ97programming guidelines, 401Œ02
protection, 380, 384, 390, 393Œ94, 395
regulation and compliance for, 294Œ95
reliability and, 379
requirements, 382Œ88
resilience and, 288, 379
risk assessment, 381Œ82, 405
safety and, 379
system layers, 374Œ75
terminology, 377Œ378
testing, 402Œ04
threats, 377, 378, 404
trust and, 22, 24
usability guideline, 397Œ98
validation, 405
vulnerability and, 377, 378, 391, 401self-monitoring architecture, 320Œ22
SEMAT (software engineering methods and tools) initiative, 24semicentralized P2P architecture, 511, 512
sensor-based data collection systems, 32
separation of concerns, 486
sequence diagrams, 141, 144, 146Œ49, 155, 163, 205, 206Œ07, 241sequential composition, 480
server overload, 512Œ13
service engineering, 533Œ41candidate identification, 533Œ36
implementation and deployment, 540Œ41
interface design, 533, 536Œ40
legacy systems and, 540service information exchange (SOAP), 525Œ26, 531, 544service-oriented architectures (SOAs), 513Œ14, 520Œ50approach, 522, 524
components, 526Œ29
message exchange, 526Œ29
service interface, 528
service protocols, 525
software as service (SaS) v., 513Œ14, 522standards, 525Œ26
web applications, 524Œ29
WSDL and, 526, 527Œ29service-oriented software engineering, see service engineering; service-oriented architectures 
(SOAs); servicesservice-oriented systems, 442, 466Œ67, 526Œ33
passed. Collaboration diagrams do a better job of visualizing complex iteration and branching and of visualizing multiple concurrent flows of control than do sequence diagrams. Common Modeling Techniques Modeling Flows of Control by Time Ordering Systems and subsystems are discussed in Chapter 31; operations and classes are discussed in Chapters 4 and 9; use cases are discussed in Chapter 16; collaborations are discussed in Chapter 27. Consider the objects that live in the context of a system, subsystem, operation or class. Consider also the objects and roles that participate in a use case or collaboration. To model a flow of control that winds through these objects and roles, you use an interaction diagram; to emphasize the passing of messages as they unfold over time, you use a sequence diagram, a kind of interaction diagram. To model a flow of control by time ordering, · Set the context for the interaction, whether it is a system, subsystem, operation, or class, or one scenario of a use case or collaboration. · Set the stage for the interaction by identifying which objects play a role in the interaction. Lay them out on the sequence diagram from left to right, placing the more important objects to the left and their neighboring objects to the right. · Set the lifeline for each object. In most cases, objects will persist through the entire interaction. For those objects that are created and destroyed during the interaction, set their lifelines, as appropriate, and explicitly indicate their birth and death with appropriately stereotyped messages. · Starting with the message that initiates this interaction, lay out each subsequent message from top to bottom between the lifelines, showing each message's properties (such as its parameters), as necessary to explain the semantics of the interaction. · If you need to visualize the nesting of messages or the points in time when actual computation is taking place, adorn each object's lifeline with its focus of control. · If you need to specify time or space constraints, adorn each message with a timing mark and attach suitable time or space constraints. · If you need to specify this flow of control more formally, attach pre- and postconditions to each message. Timing marks are discussed in Chapter 23; pre- and postconditions are discussed in Chapter 4; packages are discussed in Chapter 12. A single sequence diagram can show only one flow of control (although you can show simple variations by using the UML's notation for iteration and branching). Typically, you'll have a number of interaction diagrams, some of which are primary and others that show alternative paths or exceptional conditions. You can use packages to organize these collections of sequence diagrams, giving each diagram a suitable name to distinguish it from its siblings. Signals are discussed in Chapter 20; timing marks are discussed in Chapter 23; constraints are discussed in Chapter 6; responsibilities are discussed in Chapter 4; notes are discussed in Chapter 6. 
CHAPTER 31  
PROJECT MANAGEMENT CONCEPTS 691absolutely necessary. A software team can avoid frustration if it is given as 
much responsibility for decision making as possible. An inappropriate process 

(e.g., unnecessary or burdensome work tasks or poorly chosen work products) 

can be avoided by understanding the product to be built, the people doing the 

work, and by allowing the team to select the process model. The team itself 

should establish its own mechanisms for accountability (technical reviews  
3 
 
 are an excellent way to accomplish this) and deﬁ ne a series of corrective ap-
proaches when a member of the team fails to perform. And ﬁ nally, the key to 
avoiding an atmosphere of failure is to establish team-based techniques for 

feedback and problem solving. 
  In addition to the ﬁ ve toxins described by Jackman, a software team often 
struggles with the differing human traits of its members. Some team members 
are extroverts; others are introverts. Some people gather information intuitively, 

distilling broad concepts from disparate facts. Others process information lin-
early, collecting and organizing minute details from the data provided. Some 

team members are comfortable making decisions only when a logical, orderly 
argument is presented. Others are intuitive, willing to make a decision based on 
“feel.” Some practitioners want a detailed schedule populated by organized tasks 
that enable them to achieve closure for some element of a project. Others prefer 
a more spontaneous environment in which open issues are okay. Some work hard 

to get things done long before a milestone date, thereby avoiding stress as the 
date approaches, while others are energized by the rush to make a last-minute 
deadline. A detailed discussion of the psychology of these traits and the ways in 
which a skilled team leader can help people with opposing traits to work together 
is beyond the scope of this book.  
4 
 
 However, it is important to note that recognition 
of human differences is the ﬁ rst step toward creating teams that jell. 
 
 
 
 
31.2.4   
Agile Teams 
 
Many software organizations advocate agile software development (Chapter 5) as an antidote to many of the problems that have plagued software project work. 
To review, the agile philosophy encourages customer satisfaction and early in-

cremental delivery of software, small highly motivated project teams, informal 
methods, minimal software engineering work products, and overall develop-
ment simplicity. 
 The small, highly motivated project team, also called an  agile team, 
 adopts 
many of the characteristics of successful software project teams discussed in the 
preceding section and avoids many of the toxins that create problems. However, 

the agile philosophy stresses individual (team member) competency coupled   
 uote:  “Do or do not. 
There is no try.” 
 Yoda from  
Star Wars  
  
3  Technical reviews are discussed in detail in Chapter 20. 
  
4  An excellent introduction to these issues as they relate to software project teams can be found 
in [Fer98]. pre22126_ch31_683-702.indd   691pre22126_ch31_683-702.indd   69113/12/13   6:16 PM13/12/13   6:16 PM
Not only may the topology of these systems change, but the distribution of their software components may change, as well. For example, database tables may be replicated across servers, only to be moved, as traffic dictates. For some global systems, components may follow the sun, migrating from server to server as the business day begins in one part of the world and ends in another. Visualizing, specifying, and documenting the topology of fully distributed systems such as these are valuable activities for the systems administrator, who must keep tabs on an enterprise's computing assets. You can use the UML's deployment diagrams to reason about the topology of such systems. When you document fully distributed systems using deployment diagrams, you'll want to expand on the details of the system's networking devices, each of which you can represent as a stereotyped node. To model a fully distributed system, · Identify the system's devices and processors as for simpler client/server systems. · If you need to reason about the performance of the system's network or the impact of changes to the network, be sure to model these communication devices to the level of detail sufficient to make these assessments. · Pay close attention to logical groupings of nodes, which you can specify by using packages. · Model these devices and processors using deployment diagrams. Where possible, use tools that discover the topology of your system by walking your system's network. · If you need to focus on the dynamics of your system, introduce use case diagrams to specify the kinds of behavior you are interested in, and expand on these use cases with interaction diagrams. Packages are discussed in Chapter 12. Use cases are discussed in Chapter 16; interaction diagrams are described in Chapter 20; instances are discussed in Chapter 13. Note When modeling a fully distributed system, it's common to reify the network itself as an node. For example, the Internet might be represented as a node (as in Figure 30-1, shown a stereotyped node). You can also reify a local area network (LAN) or wide-area network (WAN) in the same way (as in Figure 30-1). In each case, you can use the node's attributes and operations to capture properties about the network.  Figure 30-4 shows the topology of a fully distributed system. This particular deployment diagram is also an object diagram, for it contains only instances. You can see three consoles (anonymous instances of the stereotyped node console), which are linked to the Internet (clearly a singleton node). In turn, there are three instances of regional servers, which serve as front ends of country servers, only one of which is shown. As the note indicates, country servers are connected to one another, but their relationships are not shown in this diagram. Figure 30-4 Modeling a Fully Distributed System 
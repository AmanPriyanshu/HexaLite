extensively changed from previous editions with a focus on agile devel
-opment using Scrum and a discussion of agile practices such as stories 

for requirements definition and test-driven development.
The remaining chapters in this part are extended descriptions of the 
software process activities that are introduced in Chapter 2. Chapter 4 

covers the critically important topic of requirements engineering, where 

the requirements for what a system should do are defined. Chapter 5 

explains system modeling using the UML, where I focus on the use of 

use case diagrams, class diagrams, sequence diagrams and state dia
-
grams for modeling a software system. In Chapter 6, I discuss the impor
-
tance of software architecture and the use of architectural patterns in 

software design.Chapter 7 introduces object oriented design and the use of design pat
-terns. I also introduce important implementation issues hereŠreuse, 

configuration management and host-target development and discuss 

open source development. Chapter 8 focuses on software testing from 

unit testing during system development to the testing of software 

releases. I also discuss the use of test-driven developmentŠan 

approach pioneered in agile methods but which has wide applicabil
-
ity. Finally, Chapter 9 presents an overview of software evolution 

issues. I cover evolution processes, software maintenance and legacy 

system management.

 Note An interface name may be text consisting of any number of letters, numbers, and certain punctuation marks (except for marks such as the colon, which is used to separate an interface name and the name of its enclosing package) and may continue over several lines. In practice, interface names are short nouns or noun phrases drawn from the vocabulary of the system you are modeling. To distinguish an interface from a class, consider prepending an I to every interface name, such as IUnknown and ISpelling. These same rules apply to types. To distinguish a type from an interface or a class, consider prepending a T to every type, such as TNatural and TCharacter.  Operations Operations are discussed in Chapters 4 and 9; the UML's extensibility mechanisms are discussed in Chapter 6. An interface is a named collection of operations used to specify a service of a class or of a component. Unlike classes or types, interfaces do not specify any structure (so they may not include any attributes), nor do they specify any implementation (so they may not include any methods, which provide the implementation of an operation). Like a class, an interface may have any number of operations. These operations may be adorned with visibility properties, concurrency properties, stereotypes, tagged values, and constraints. When you visualize an interface in its normal form as a circle, by definition, you suppress the display of these operations. However, if it's important for your understanding of the current model, you can render an interface as a stereotyped class, listing its operations in the appropriate compartment. Operations may be drawn showing only their name, or they may be augmented to show their full signature and other properties, as in Figure 11-3. Figure 11-3 Operations 
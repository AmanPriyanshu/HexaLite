918 REFERENCES
 [Gli09] Glinz, M., “A Risk-Base, Value-Oriented Approach to Quality Requirements,”  IEEE Software 
, vol. 26, no. 5, March–April 2009, pp. 34–41.  [Glu94] Gluch, D., “A Construct for Describing Software Development Risks,” CMU/SEI-94-TR-14, Software Engineering Institute, 1994.  [Gna99] Gnaho, C., and F. Larcher, “A User-Centered Methodology for Complex and Cus-tomizable Web Engineering,”  Proceedings of the First ICSE Workshop on Web Engineering 
, ACM, Los Angeles, May 1999.  [Gon04] Gonzales, R., “Requirements Engineering,” Sandia National Laboratories, a slide presentation, available at www.incose.org/enchantment/docs/04AprRequirement-
sEngineering.pdf.  [Gor06] Gorton, I.,  Essential Software Architecture 
, Springer, 2006.  [Got11] Gotel, O., and S. Morris, “Requirements Tracery,”  IEEE Software 
, vol. 28, no. 5, September–October 2011, pp. 92–94.  [Gra03] Gradecki, J., and N. Lesiecki,  Mastering AspectJ: Aspect-Oriented Programming in Java 
, Wiley, 2003.  [Gra87] Grady, R. B., and D. L. Caswell,  Software Metrics: Establishing a Company-Wide Program 
, Prentice Hall, 1987.  [Gra92] Grady, R. G.,  Practical Software Metrics for Project Management and Process Improvement 
, Prentice Hall, 1992.  [Gru00] Gruia-Catalin, R., et al., “Software Engineering for Mobility: A Roadmap,”  Proceed-ings 
  of the 22nd International Conference on the Future of Software Engineering 
, 2000.  [Gru02] Grundy, J., “Aspect-Oriented Component Engineering,” 2002, www.cs.auckland.ac.nz/~john-g/aspects.html.  [Gub09] Gube, J., “40+ Helpful Resources on User Interface Design Patterns,” June 15, 2009, http://www.smashingmagazine.com/2009/06/15/40-helpful-resources-on-user-
interface-design-patterns/.  [Gus89] Gustavsson, A., “Maintaining the Evolution of Software Objects in an Integrated Environment,”  Proceedings of the Second International Workshop on Software Conﬁ gu-
ration Management 
, ACM, Princeton, NJ, October 1989, pp. 114–117.  [Gut93] Guttag, J., and J. Horning,  Larch: Languages and Tools for Formal Speciﬁ cation
 
, Springer-Verlag, 1993.  [Hac98] Hackos, J., and J. Redish,  User and Task Analysis for Interface Design 
, Wiley, 1998.  [Hai02] Hailpern, B., and P. Santhanam, “Software Debugging, Testing and Veriﬁ cation,” 
 IBM Systems Journal 
, vol. 41, no. 1, 2002, available at www.research.ibm.com/journal/sj/411/hailpern.html.  [Hal77] Halstead, M.,  Elements of Software Science 
, North-Holland, 1977.  [Hal90] Hall, A., “Seven Myths of Formal Methods,”  IEEE Software 
, September 1990, pp. 11–20.  [Hal98] Hall, E. M.,  Managing Risk: Methods for Software Systems Development 
, Addison-Wesley, 1998.  [Ham90] Hammer, M., “Reengineer Work: Don’t Automate, Obliterate,”  Harvard Business Review 
, July–August 1990, pp. 104–112.  [Han95] Hanna, M., “Farewell to Waterfalls,”  Software Magazine 
, May 1995, pp. 38–46.  [Har11] Harris, N., and P. Avgeriou, “Pattern-Based Architecture Reviews,”  IEEE Software 
, vol. 28, no. 6, November–December 2011, pp. 66–71.  [Har12] Hardy, T.,  Software and System Safety 
, Authorhouse, 2012.  [Har98b] Harrison, R., S. Counsell, and R. Nithi, “An Evaluation of the MOOD Set of Object-Oriented Software Metrics,”  IEEE Trans. Software Engineering 
, vol. SE-24, no. 6, June 1998, pp. 491–496.  [Hen10] Hendler, J., “Web 3.0: The Dawn of Semantic Search,”  IEEE Computer 
, January, 2010, p. 77.  [Her00] Herrmann, D.,  Software Safety and Reliability 
, Wiley-IEEE Computer Society Press, 2000.  [Het84] Hetzel, W.,  The Complete Guide to Software Testing 
, QED Information Sciences, 1984.  [Het93] Hetzel, W.,  Making Software Measurement Work 
, QED Publishing, 1993.  [Hev93] Hevner, A., and H. Mills, “Box Structure Methods for System Development with Objects,”  IBM Systems Journal 
, vol. 31, no. 2, February 1993, pp. 232–251. pre22126_ref_909-932.indd   918pre22126_ref_909-932.indd   91813/12/13   6:19 PM13/12/13   6:19 PM
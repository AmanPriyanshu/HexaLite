˜˚˛˝˙ˆˇ˘˜˜
˜˚˙compositionof components, 480Œ86, 487service systems and, 541Œ47computation independent model (CIM), 159Œ61
computer science, software engineering v., 20, 23
concept reuse, 439
conceptual system design, 553, 563Œ66, 577, 594
conceptual views, 174, 192
concurrency, 491
confidence levels (verification), 228Œ29
confidentiality, 28, 374, 413
configurable application systems, 442, 454Œ457
configuration management (CM), 213, 215Œ216, 222, 730Œ55. See also change  
managementactivities of, 215Œ16
agile methods and, 732, 742Œ43, 748, 750
architectural patterns, 175
change management, 731, 745Œ50, 753
design implementation and, 213, 215Œ16, 222
problem tracking, 216
release management, 216, 731, 750Œ53, 754
system building, 731, 740Œ45, 753
system integration and, 215Œ16
terminology for, 734
version management (VM), 215, 216, 731, 735Œ40, 753configuration, software product lines, 451Œ52
ConOps document standard, 563
consistency, 107, 129, 652
constants, naming of, 331
construction phase (RUP), 46
consumer/producer processes (circular buffer), 616Œ17container systems, 603Œ05
context models, 141Œ44, 163, 199Œ200
contingency plans, 650Œ51
continuous integration, 78, 742Œ43
controlapplication frameworks and, 445
cybersecurity, 413Œ414
inversion of, 445
safety-critical systems, 341Œ42
security, 377, 378Œ79
visibility of information, 325Œ26control metrics, 717
controlled systems, 319
cooperative interaction patterns, 175
coordination services, 534, 548CORBA (Common Object Request Broker  Architecture), 466, 493, 507cost/dependability curve, 290Œ91
cost drivers, 692
costs. See also estimation techniqueschange analysis and, 133
COCOMO II modeling, 686Œ96
dependability and, 290Œ91
distributed systems, 495
effort, 669
fault removal, 308Œ09
formal verification, 357
maintenance/development, 274Œ76, 279, 280
overhead, 669
project planning, 669
safety engineering and, 357, 362Œ63
software engineering, 20
software reuse and, 214, 439
system failure, 286COTS (commercial-off-the-shelf) systems, 453. See also application system reusecritical systems, 287. See also safety-critical systemsagile methods and, 75
dependable processes for, 297
documentation for, 92, 96
failure of, 287, 303
formal methods for dependability of, 302
redundancy and, 295
types of, 287, 424
verification and validation costs, 290cultural change, 97
customer involvement (agile methods), 76, 77, 91, 748, 750customer testing, 59
customization, 471, 732Œ33
cybersecurity, 376, 412Œ416, 432˝damage limitation, 342, 351
data clumping, 279
data collection systems, 25, 202
data flow diagrams (DFD), 154Œ55
data reengineering, 277
database design, 57
determine its operations. Doing so is the first step in understanding the nature of any under-documented component.  To model the seams in a system, Collaborations are discussed in Chapter 27. · Within the collection of classes and components in your system, draw a line around those that tend to be tightly coupled relative to other sets of classes and components. · Refine your grouping by considering the impact of change. Classes or components that tend to change together should be grouped together as collaborations. · Consider the operations and the signals that cross these boundaries, from instances of one set of classes or components to instances of other sets of classes and components. · Package logically related sets of these operations and signals as interfaces. · For each such collaboration in your system, identify the interfaces it relies on (imports) and those it provides to others (exports). You model the importing of interfaces by dependency relationships, and you model the exporting of interfaces by realization relationships. · For each such interface in your system, document its dynamics by using pre- and postconditions for each operation, and use cases and state machines for the interface as a whole. Behavioral modeling is discussed in Sections 4 and 5. For example, Figure 11-6 shows the seams surrounding a component (the library ledger.dll) drawn from a financial system. This component realizes three interfaces: IUnknown, ILedger, and IReports. In this diagram, IUnknown is shown in its expanded form; the other two are shown in their simple form, as lollipops. These three interfaces are realized by ledger.dll and are exported to other components for them to build on. Figure 11-6 Modeling the Seams in a System  
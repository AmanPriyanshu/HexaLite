690 PART FOUR  
MANAGING SOFTWARE PROJECTS
 
 
 
 4.
  A  synchronous paradigm
 
 relies on the natural compartmentalization of a problem and organizes team members to work on pieces of the problem 
with little active communication among themselves.    
As an historical footnote, one of the earliest software team organizations was 
a closed paradigm structure originally called the  chief programmer team.
 
 This 
structure was ﬁ rst proposed by Harlan Mills and described by Baker [Bak72]. 
As a counterpoint to the chief programmer team structure, Constantine’s ran-

dom paradigm [Con93] suggests a software team with creative independence 
whose approach to work might best be termed  innovative anarchy.
 
 Although the 
free-spirited approach to software work has appeal, channeling creative energy 
into a high-performance team must be a central goal of a software engineering 
organization. To achieve a high-performance team: team members must have 

trust in one another, the distribution of skills must be appropriate to the prob-

lem, and mavericks may have to be excluded from the team, if team cohesive-
ness is to be maintained.  Regardless of team organization, the objective for every project manager is to help create a team that exhibits cohesiveness. In their book  Peopleware,
 
 DeMarco and Lister [DeM98] discuss this issue:   
 
 
 
 
 
We tend to use the word  
team 
 fairly loosely in the business world, calling any group of 
people assigned to work together a “team.” But many of these groups just don’t seem 
like teams. They don’t have a common deﬁ nition of success or any identiﬁ
 able team 
spirit. What is missing is a phenomenon that we call  jell. 
  A jelled team is a group of people so strongly knit that the whole is greater than  Once a team begins to jell, the probability of success goes way up. The team can They don’t need to be managed 

in the traditional way, and they certainly don’t need to be motivated. They’ve got 

momentum.  
 
 
 
  
 
DeMarco and Lister contend that members of jelled teams are signiﬁ cantly more 
productive and more motivated than average. They share a common goal, a 
common culture, and in many cases, a “sense of eliteness” that makes them 
unique.  But not all teams jell. In fact, many teams suffer from what Jackman [Jac98] calls “team toxicity.” She deﬁ
 nes ﬁ
 ve factors that “foster a potentially toxic team 
environment”: (1) a frenzied work atmosphere, (2) high frustration that causes 
friction among team members, (3) a “fragmented or poorly coordinated” software 
process, (4) an unclear deﬁ nition of roles on the software team, and (5) “continu-
ous and repeated exposure to failure.”   
To avoid a frenzied work environment, the project manager should be cer-
tain that the team has access to all information required to do the job and 

that major goals and objectives, once deﬁ ned, should not be modiﬁ
 ed unless 
 
 
 
 uote:  “If you want to 
be incrementally 
better: Be 
competitive. If 
you want to be 
exponentially 
better: Be 
cooperative.”  Author unknown 
 What is a 

“jelled“ team? ? Why is it 

that teams fail to jell? ?pre22126_ch31_683-702.indd   690pre22126_ch31_683-702.indd   69013/12/13   6:16 PM13/12/13   6:16 PM
Class diagrams are discussed in Chapter 8. Dependencies, generalization, and associations are all static things defined at the level of classes. In the UML, these relationships are usually visualized in class diagrams. Links are discussed in Chapter 15; transitions are discussed in Chapter 21. When you start modeling at the object level, and especially when you start working with dynamic collaborations of these objects, you'll encounter two other kinds of relationships#links (which are instances of associations representing connections among objects across which messages may be sent) and transitions (which are connections among states in a state machine). Common Modeling Techniques Modeling Simple Dependencies The most common kind of dependency relationship is the connection between a class that only uses another class as a parameter to an operation. To model this using relationship, Â· Create a dependency pointing from the class with the operation to the class used as a parameter in the operation. For example, Figure 5-8 shows a set of classes drawn from a system that manages the assignment of students and instructors to courses in a university. This figure shows a dependency from CourseSchedule to Course, because Course is used in both the add and remove operations of CourseSchedule. Figure 5-8 Dependency Relationships  If you provide the full signature of the operation as in this figure, you don't normally need to show the dependency, as well, because the use of the class is already explicit in the signature. However, you'll want to show this dependency sometimes, especially if you've elided operation signatures or if your model shows other relationships to the used class. Other relationship stereotypes are discussed in Chapter 10. 
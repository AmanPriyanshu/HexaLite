˜˙˘˜˜˚˛˝˙˙ˆˇ˘
denial of service attackAn attack on a web-based software system that attempts to overload the system so that it cannot provide its normal service to users.dependabilityThe dependability of a system is an aggregate property that takes into account the 
system™s safety, reliability, availability, security, resilience and other attributes. The 
dependability of a system reflects the extent to which it can be trusted by its users.dependability requirementA system requirement that is included to help achieve the required dependability for 

a system. Non-functional dependability requirements specify dependability attribute 

values; functional dependability requirements are functional requirements that 
 specify how to avoid, detect, tolerate or recover from system faults and failures.dependability caseA structured document that is used to back up claims made by a system developer 
about the dependability of a system. Specific types of dependability case are safety 
cases and security cases.design patternA well-tried solution to a common problem that captures experience and good prac-
tice in a form that can be reused. It is an abstract representation than can be instan-
tiated in a number of ways.digital learning environmentAn integrated set of software tools, educational applications and content that is 
geared to support learning.distributed systemA software system where the software sub-systems or components execute on  different processors.
domainA specific problem or business area where software systems are used. Examples of 
domains include real-time control, business data processing and telecommunica-
tions switching.domain modelA definition of domain abstractions, such as policies, procedures, objects, relation-
ships and events. It serves as a base of knowledge about some problem area.DSDMDynamic System Development Method. Claimed to be one of the first agile devel-
opment methods.embedded systemA software system that is embedded in a hardware device e.g. the software system 
in a cell phone. Embedded systems are usually real-time systems and so have to 
respond in a timely way to events occurring in their environment.
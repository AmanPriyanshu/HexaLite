164 PART TWO  
MODELING 
 
 
 c.  
Buying a stock using an online brokerage account.    
 
 d.  
Searching for books (on a speciﬁ c topic) using an online bookstore. 
   
 
 e.  
An activity speciﬁ ed by your instructor. 
 
 
   
 
8.10.  What do use case “exceptions” represent?    
 
8.11.  Write a user story for one of the activities listed in question 8.9. 
   
 
8.12.  Consider the use case you created in question 8.9, write a nonfunctional requirement for the application.    
 
8.13.  Describe what an  analysis pattern 
 is in your own words.    
 
8.14.  Using the template presented in Section 8.5.2, suggest one or more analysis pattern for the following application domains:   
 
 
 a.  
Accounting software.    
 
 b.  
E-mail software.    
 
 c.  
Internet browsers.    
 
 d.  
Word-processing software. 
   
 
 e.  
Website creation software. 
   
 
 f.  
An application domain speciﬁ ed by your instructor. 
 
 
   
 
8.15.  What does  
win-win 
 mean in the context of negotiation during the requirements engi-
neering activity?    
 
8.16.  What do you think happens when requirement validation uncovers an error? Who is involved in correcting the error?    
 
8.17.  What ﬁ ve tasks make up a comprehensive requirements monitoring program? 
  
 
 
 
  F
URTHER
 READINGS AND OTHER INFORMATION
 SOURCES  
 
Because it is pivotal to the successful creation of any complex computer-based system, re-
quirements engineering is discussed in a wide array of books. Chemuturi ( Requirements 
Engineering and Management for Software Development Projects,
 
 Springer, 2013) presents 
important aspects of requirements engineering. Pohl and Rupp ( Requirements Engineering 
Fundamentals, 
 Rocky Nook, 2011) present basic principles and concepts, and Pohl ( 
Require-
ments Engineering, 
 Springer, 2010) offers a more detailed view of the entire requirements 
engineering process. Young ( 
The Requirements Engineering Handbook,
 
 Artech House Pub-lishers, 2003) presents an in-depth discussion of requirements engineering tasks.   
 
Beaty and Chen ( Visual Models for Software Products Best Practices,
 
 Microsoft Press, 
2012), Robertson ( Mastering the Requirements Process: Getting Requirements Right
 
, 3rd ed., Addison-Wesley, 2012), Hull and her colleagues ( 
Requirements Engineering,
 
 3rd ed.,  
Springer- 
Verlag, 2010), Bray ( 
An Introduction to Requirements Engineering,
 
 Addison- 
Wesley, 2002), 
Arlow ( Requirements Engineering,
 
 Addison-Wesley, 2001), Gilb ( 
Requirements Engineer-
ing, 
 Addison-Wesley, 2000), Graham ( 
Requirements Engineering and Rapid Development,
 
  Addison-Wesley, 1999), and Sommerville and Kotonya ( 
Requirement Engineering: Processes 
and Techniques,
 
 Wiley, 1998), are but a few of many books dedicated to the subject. Wiegers 
( More About Software Requirements,
 
 Microsoft Press, 2010) provides many practical tech-
niques for requirements gathering and management.   
 
A patterns-based view of requirements engineering is described by Withall ( 
Software 
Requirement Patterns,
 
 Microsoft Press, 2007). Ploesch ( 
Contracts, Scenarios and Prototypes,
 
 Springer-Verlag, 2004) discusses advanced techniques for developing software require-

ments. Windle and Abreo ( 
Software Requirements Using the Uniﬁ
 ed Process,
 
 Prentice Hall, 
2002) discuss requirements engineering within the context of the Uniﬁ ed Process and UML 
notation. Alexander and Steven ( Writing Better Requirements,
 
 Addison-Wesley, 2002) pres-
ent a brief set of guidelines for writing clear requirements, representing them as scenarios, 
and reviewing the end result. pre22126_ch08_131-165.indd   164pre22126_ch08_131-165.indd   16413/12/13   6:11 PM13/12/13   6:11 PM
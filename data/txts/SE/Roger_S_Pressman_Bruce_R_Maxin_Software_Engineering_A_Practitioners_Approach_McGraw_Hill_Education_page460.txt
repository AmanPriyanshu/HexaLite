430 PART THREE  
QUALITY MANAGEMENT 
 
 
Duvall and his colleagues ( Continuous Integration: Improving Software Quality and 
Reducing Risk, 
 Addison-Wesley, 2007), Tian ( 
Software Quality Engineering,
 
 Wiley-IEEE 
Computer Society Press, 2005), Kandt ( Software Engineering Quality Practices,
 
 Auerbach, 
2005), Godbole ( Software Quality Assurance: Principles and Practice,
 
 Alpha Science Interna-
tional, Ltd., 2004), and Galin ( Software Quality Assurance: From Theory to Implementation,
 
  Addison-Wesley, 2003) present detailed treatments of SQA. Quality assurance in the context 
of the agile process is considered by Sterling ( Managing Software Debt, Addison-Wesley, 
2010 
) and Stamelos and Sfetsos ( Agile Software Development Quality Assurance,
 
 IGI Global, 
2007).   
 
Solid design leads to high software quality. Jayasawal and Patton ( 
Design for Trustworthy 
Software,
 
 Prentice Hall, 2006) and Ploesch ( 
Contracts, Scenarios and Prototypes,
 
 Springer, 
2004) discuss tools and techniques for developing “robust” software.   
 
Measurement is an important component of software quality engineering. Jones and Bonsignour ( The Economic of Software Quality,
 
 Addison-Wesley, 2011), Ejiogu ( 
Software 
Metrics: The Discipline of Software Quality,
 
 BookSurge Publishing, 2005), Kan ( 
Metrics and Models in Software Quality Engineering,
 
 Addison-Wesley, 2002), and Nance and Arthur 
( Managing Software Quality,
 
 Springer, 2002) discuss important quality-related metrics and 
models. The team-oriented aspects of software quality are considered by Evans ( Achieving Software Quality through Teamwork,
 
 Artech House Publishers, 2004).   
 
A wide variety of information sources on software quality is available on the Internet. An up-to-date list of World Wide Web references can be found under “software engineering 

resources” at the SEPA website:  
 
www.mhhe.com/pressman
 
 
.  
 
 
 
 pre22126_ch19_411-430.indd   430pre22126_ch19_411-430.indd   43013/12/13   6:13 PM13/12/13   6:13 PM
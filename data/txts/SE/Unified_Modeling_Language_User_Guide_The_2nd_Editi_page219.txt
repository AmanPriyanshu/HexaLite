· Activity states and action states · Transitions · Objects Note An activity diagram is basically a projection of the elements found in an activity graph, a special case of a state machine in which all or most states are activity states and in which all or most transitions are triggered by completion of activities in the source state. Because an activity diagram is a kind of state machine, all the characteristics of state machines apply. That means that activity diagrams may contain simple and composite states, branches, forks, and joins.  Like all other diagrams, activity diagrams may contain notes and constraints. Action States and Activity States Attributes and operations are discussed in Chapters 4 and 9; signals are discussed in Chapter 20; creation and destruction of objects are discussed in Chapter 15 ; states and state machines are discussed in Chapter 21. In the flow of control modeled by an activity diagram, things happen. You might evaluate some expression that sets the value of an attribute or that returns some value. Alternately, you might call an operation on an object, send a signal to an object, or even create or destroy an object. These executable, atomic computations are called action states because they are states of the system, each representing the execution of an action. As Figure 19-2 shows, you represent an action state using a lozenge shape (a symbol with horizontal top and bottom and convex sides). Inside that shape, you may write any expression. Figure 19-2 Action States  Note The UML does not prescribe the language of these expressions. Abstractly, you might just use structured text; more concretely, you might use the syntax and semantics of a specific programming language. 
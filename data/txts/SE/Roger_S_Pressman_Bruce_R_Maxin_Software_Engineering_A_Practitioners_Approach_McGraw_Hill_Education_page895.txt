CHAPTER 39  
CONCLUDING COMMENTS 865decades. When coupled with equivalent advances in nanotechnology, genetics, 
and robotics, we may approach a time in the middle part of this century when 
the distinction between humans (as we know them today) and machines begins to 
blur—a time when human evolution accelerates in ways that are both frightening 
(to some) and spectacular (to others).  By sometime in the coming decade, Kurzweil argues that computing capacity and the requisite software will be sufﬁ cient to model every aspect of the human 
brain [Kur13] —all of the physical connections, analog processes, and chem-
ical overlays. When this occurs, human beings will take the ﬁ rst step toward 
achieving “strong AI (artiﬁ cial intelligence),” and as a consequence, machines 
that truly do think (using today’s conventional use of the word). But there will 

be a fundamental difference. Human brain processes are exceedingly complex 
and only loosely connected to external informal sources. They are also compu-
tationally slow, even in comparison to today’s computing technology. When full 

human brain emulation occurs, “thought” will occur at speeds thousands of times 
more rapid than its human counterpart with intimate connections to a sea of 
information (think of the present-day Web as a primitive example). The result 

s best left to Kurzweil to describe. 
 
   
It’s important to note that not everyone believes that the future Kurzweil de-
scribes is a good thing. In a now famous essay entitled “The Future Doesn’t Need 
Us,” Bill Joy [Joy00], one of the founders of Sun Microsystems, argues that “ro-
botics, genetic engineering, and nanotech are threatening to make humans an 
endangered species.” His arguments predicting a technology dystopia represent 
a counterpoint to Kurzweil’s predicted utopian future. Both should be seriously 

considered as software engineers take one of the lead roles in deﬁ ning the long 
view for the human race.   
 
 
 
 39.5  
THE SOFTWARE
 ENGINEER’S RESPONSIBILITY  
 
Software engineering has evolved into a respected, worldwide profession. As professionals, software engineers should abide by a code of ethics that guides the 
work that they do and the products that they produce. An ACM/IEEE-CS Joint 
Task Force has produced a  
Software Engineering Code of Ethics and Professional 
Practices 
 (Version 5.1). The code [ACM12] states: 
 
 
Software engineers shall commit themselves to making the analysis, speciﬁ ca-
tion, design, development, testing and maintenance of software a beneﬁ cial and 
respected profession. In accordance with their commitment to the health, safety 

and welfare of the public, software engineers shall adhere to the following Eight 

Principles: 
  
 
 
 
 1.  
PUBLIC—Software engineers shall act consistently with the public interest.   
 uote:  “You can’t connect 
the dots looking 
forward; you can 

only connect them 
looking backwards. 
So you have to 
trust that the dots 
will somehow 
connect in your 
future.”  Steve Jobs 
pre22126_ch39_860-868.indd   865pre22126_ch39_860-868.indd   86513/12/13   6:18 PM13/12/13   6:18 PM
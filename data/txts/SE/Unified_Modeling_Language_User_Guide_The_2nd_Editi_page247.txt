or a change in state. A signal or a call may have parameters whose values are available to the transition, including expressions for the guard condition and action. Specifying a family of signals is discussed in Chapter 20; multiple, nonoverlapping guard conditions form a branch, as discussed in Chapter 19. It is also possible to have a triggerless transition, represented by a transition with no event trigger. A triggerless transition#also called a completion transition#is triggered implicitly when its source state has completed its activity. Note An event trigger may be polymorphic. For example, if you've specified a family of signals, then a transition whose trigger event is S can be triggered by S, as well as by any children of S.  Guard   As the previous figure shows, a guard condition is rendered as a Boolean expression enclosed in square brackets and placed after the trigger event. A guard condition is evaluated only after the trigger event for its transition occurs. Therefore, it's possible to have multiple transitions from the same source state and with the same event trigger, as long as those conditions don't overlap. Change events are discussed in Chapter 20. A guard condition is evaluated just once for each transition at the time the event occurs, but it may be evaluated again if the transition is retriggered. Within the Boolean expression, you can include conditions about the state of an object (for example, the expression aHeater in Idle, which evaluates True if the Heater object is currently in the Idle state). Note Although a guard condition is evaluated only once each time its transition triggers, a change event is potentially evaluated continuously.  Actions are discussed in Chapter 15. Action   An action is an executable atomic computation. Actions may include operation calls (to the object that owns the state machine, as well as to other visible objects), the creation or destruction of another object, or the sending of a signal to an object. As the previous figure shows, there's a special notation for sending a signal#the signal name is prefixed with the keyword send as a visual cue. Activities are discussed in a later section of this chapter; dependencies are discussed in Chapters 5 and 10. An action is atomic, meaning that it cannot be interrupted by an event and therefore runs to completion. This is in contrast to an activity, which may be interrupted by other events. 
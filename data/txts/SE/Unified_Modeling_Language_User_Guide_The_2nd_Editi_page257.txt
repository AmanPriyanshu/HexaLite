 In the lifetime of this controller class, there are four main states: Initializing (the controller is starting up), Idle (the controller is ready and waiting for alarms or commands from the user), Command (the controller is processing commands from the user), and Active (the controller is processing an alarm condition). When the controller object is first created, it moves first to the Initializing state and then unconditionally to the Idle state. The details of these two states are not shown, other than the self-transition with the time event in the Idle state. This kind of time event is common in embedded systems, which often have a heartbeat timer that causes a periodic check of the system's health. Control passes from the Idle state to the Active state on receipt of an alarm event (which includes the parameter s, identifying the sensor that was tripped). On entering the Active state, setAlarm is dispatched as the entry action, and control then passes first to the Checking state (validating the alarm), then to the Calling state (calling the alarm company to register the alarm), and finally to the Waiting state. The Active and Waiting states are exited only upon clearing the alarm, or by the user signaling the controller for attention, presumably to issue a command. Notice that there is no final state. That, too, is common in embedded systems, which are intended to run continuously. Hints and Tips 
˜˜˚˛˝˙ˆˇ˘
˜˜˜˜˜
Software engineering is essential for the functioning of government, society, and national 
and international businesses and institutions. We can™t run the modern world without 

software. National infrastructures and utilities are controlled by computer-based systems, 

and most electrical products include a computer and controlling software. Industrial 

manufacturing and distribution is completely computerized, as is the financial system. 

Entertainment, including the music industry, computer games, and film and television, is 

software-intensive. More than 75% of the world™s population have a software-controlled 

mobile phone, and, by 2016, almost all of these will be Internet-enabled.Software systems are abstract and intangible. They are not constrained by the prop-erties of materials, nor are they governed by physical laws or by manufacturing pro-cesses. This simplifies software engineering, as there are no natural limits to the potential 

of software. However, because of the lack of physical constraints, software systems can 

quickly become extremely complex, difficult to understand, and expensive to change.There are many different types of software system, ranging from simple embed-ded systems to complex, worldwide information systems. There are no universal 

notations, methods, or techniques for software engineering because different types 

of software require different approaches. Developing an organizational information 
system is completely different from developing a controller for a scientific instru
-
ment. Neither of these systems has much in common with a graphics-intensive com-
puter game. All of these applications need software engineering; they do not all need 
the same software engineering methods and techniques.There are still many reports of software projects going wrong and of ﬁsoftware failures.ﬂ Software engineering is criticized as inadequate for modern software 

development. However, in my opinion, many of these so-called software failures 

are˜a consequence of two factors:1. Increasing system complexity 
As new software engineering techniques help us 
to build larger, more complex systems, the demands change. Systems have to be 
built and delivered more quickly; larger, even more complex systems are 

required; and systems have to have new capabilities that were previously 

thought to be impossible. New software engineering techniques have to be 

developed to meet new the challenges of delivering more complex software.2. Failure to use software engineering methods It is fairly easy to write computer 
programs without using software engineering methods and techniques. Many 

companies have drifted into software development as their products and ser
-vices have evolved. They do not use software engineering methods in their every
-
day work. Consequently, their software is often more expensive and less reliable 

than it should be. We need better software engineering education and training to 

address this problem.Software engineers can be rightly proud of their achievements. Of course, we still 
have problems developing complex software, but without software engineering we 

would not have explored space and we would not have the Internet or modern tele-
communications. All forms of travel would be more dangerous and expensive. 

Challenges for humanity in the 21st century are climate change, fewer natural 

to model static aspects, and interaction diagrams, statechart diagrams, and activity diagrams to model the dynamic aspects. · Model the architectural patterns and design patterns that shape each of these models using collaborations. The Rational Unified Process is discussed in Chapter 2. Understand that you don't ever create a system's architecture in one big-bang event. Rather, a well-structured process for the UML involves the successive refinement of a system's architecture in a manner that is use case"driven, architecture-centric, and iterative and incremental. The UML's extensibility mechanisms are discussed in Chapter 6. For all but the most trivial systems, you'll have to manage versions of your system's artifacts. You can use the UML's extensibility mechanisms#and tagged values, in particular#to capture your decisions about the version of each element. Modeling Systems of Systems A system at one level of abstraction will look like a subsystem of a higher level of abstraction. Similarly, a subsystem at one level of abstraction will look like a full-fledged system from the perspective of the team responsible for creating it. All complex systems exhibit this kind of hierarchy. As you move to systems of greater and greater complexity, you'll find it necessary to decompose your effort into subsystems, each of which can be developed somewhat separately, and iteratively and incrementally grown into the whole system. The development of a subsystem looks just like the development of a system. To model a system or a subsystem, · Identify major functional parts of the system that may be developed, released, and deployed somewhat independently. Technical, political, legacy, and legal issues will often shape how you draw the lines around each subsystem. · For each subsystem, specify its context, just as you do for the system as a whole; the actors that surround a subsystem encompass all its neighboring subsystems, so they must all be designed to collaborate. · For each subsystem, model its architecture just as you do for the system as a whole. Hints and Tips It's important to choose the right set of models to visualize, specify, construct, and document a system. A well-structured model · Provides a simplification of reality from a distinct and relatively independent point of view. · Is self-contained in that it requires no other content to understand its semantics. · Is loosely coupled to other models via trace relationships. · Collectively (with other neighboring models) provides a complete statement of a system's artifacts. Similarly, it's important to decompose complex systems into well-structured subsystems. A well-structured system 
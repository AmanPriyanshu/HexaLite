˘˘
˜˚˛˝˙ˆˇ˘˜˘˜˘We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:Individuals and interactions over processes and tools Working software over comprehensive documentation 
Customer collaboration over contract negotiation 
Responding to change over following a planThat is, while there is value in the items on the right, we value the items on the left moreƒ.All agile methods suggest that software should be developed and delivered incre-mentally. These methods are based on different agile processes but they share a set 
of principles, based on the agile manifesto, and so they have much in common. I 

have listed these principles in Figure 3.2.Agile methods have been particularly successful for two kinds of system  development.1.
 Product development where a software company is developing a small or 

medium-sized product for sale. Virtually all software products and apps are now 
developed using an agile approach.2. Custom system development within an organization, where there is a clear com
-
mitment from the customer to become involved in the development process and 

where there are few external stakeholders and regulations that affect the software.Agile methods work well in these situations because it is possible to have con-tinuous communications between the product manager or system customer and the 
development team. The software itself is a stand-alone system rather than tightly 

integrated with other systems being developed at the same time. Consequently, there 
is no need to coordinate parallel development streams. Small and medium-sized 
PrincipleDescriptionCustomer involvementCustomers should be closely involved throughout the development process. 
Their role is provide and prioritize new system requirements and to evaluate 
the iterations of the system.Embrace changeExpect the system requirements to change, and so design the system to 
accommodate these changes.Incremental deliveryThe software is developed in increments, with the customer specifying the 
requirements to be included in each increment.Maintain simplicityFocus on simplicity in both the software being developed and in the 
development process. Wherever possible, actively work to eliminate 
complexity from the system.People, not processThe skills of the development team should be recognized and exploited. 
Team members should be left to develop their own ways of working without 
prescriptive processes.Figure 3.2 The principles of agile 
methodsƒhttp://agilemanifesto.org/

Figure 10-1 Advanced Relationships  Terms and Concepts A relationship is a connection among things. In object-oriented modeling, the four most important relationships are dependencies, generalizations, associattions, and realizations. Graphically, a relationship is rendered as a path, with different kinds of lines used to distinguish the different relationships. Dependency The basic properties of dependencies are discussed in Chapter 5. A dependency is a using relationship, specifying that a change in the specification of one thing (for example, class SetTopController) may affect another thing that uses it (for example, class ChannelIterator), but not necessarily the reverse. Graphically, a dependency is rendered as a dashed line, directed to the thing that is depended on. Apply dependencies when you want to show one thing using another. The UML's extensibility mechanisms are discussed in Chapter 6. A plain, unadorned dependency relationship is sufficient for most of the using relationships you'll encounter. However, if you want to specify a shade of meaning, the UML defines a number of stereotypes that may be applied to dependency relationships. There are 17 such stereotypes, all of which can be organized into six groups. Class diagrams are discussed in Chapter 8. First, there are eight stereotypes that apply to dependency relationships among classes and objects in class diagrams. 1. bind  Specifies that the source instantiates the target template using the given actual parameters Templates and bind dependencies are discussed in Chapter 9. You'll use bind when you want to model the details of template classes. For example, the relationship between a template container class and an instantiation of that class would be modeled as a bind dependency. Bind includes a list of actual arguments that map to the formal arguments of the template. 
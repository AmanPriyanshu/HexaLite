˜abstraction level (reuse), 213acceptability, 22, 347Œ48
acceptance testing, 77, 82, 249, 250Œ51, 252
accidents (mishaps), 343Œ44, 347
ACM/IEEE-CS Joint Task Force on Software 
 Engineering Ethics and Professional Practices, 

29Œ30acquisition (procurement), 473, 553Œ54, 566Œ70
activities (software engineering activities), 20, 23, 44, 47Œ48, 54Œ61, 142, 298, 643Œ44. See also 
development; evolution; specification;  validationactivity charts (planning), 678Œ80
activity diagrams (UML), 33Œ34, 47, 50, 56, 141, 143Œ44, 163actuators, 218, 502, 613Œ14, 615
Ada programming language, 359
adaptors, 469, 482Œ83
additive composition, 481
Adobe Creative Suite, 27
aggregation, 153
agile methods, 45, 66, 72Œ100architectural design and, 168, 175
change and, 76, 78, 91, 131Œ32
change management and, 97, 748, 750
configuration management (CM) for, 732, 742Œ43, 748, 750critical systems and, 75, 92, 96continuous integration, 742Œ43
custom systems and, 90, 732
customer involvement and, 76, 77, 91, 748, 750
development team, 85, 90, 92Œ93
documentation and, 73Œ75, 86, 89Œ90, 92Œ93, 175
evolution and, 90, 261
extreme programming (XP), 73, 77Œ84
incremental development and, 45, 50, 73Œ74, 77
large system complexity and, 93Œ96
manifesto, 75Œ76, 77Œ78
model-driven architecture (MDA) and, 162
organizations and, 91, 97
pair programming, 78, 83Œ84
‚people, not process™ and, 76, 77, 91
plan-driven approach v., 45, 74Œ75, 91Œ93, 98
principles of, 76
process improvement and, 66
project management and, 84Œ88, 643, 647, 661
project planning, 91Œ93, 670, 680Œ83, 696
quality management (QM), 714Œ16, 727
refactoring, 51, 80Œ81
risk management and, 647
scaling, 88Œ97, 98
simplicity of, 76, 78, 91
Scrum approach and, 73, 78, 85Œ88, 96
test first development, 59, 78, 81Œ83
user stories for, 681Œ82
user testing, 251agile modeling, 50
Agile Scaling Model (ASM), 95
air traffic management (ATC) systems, 554Œ55, 569
938 INDEX   Requirements gathering, 
collaborative,   143   
   Requirements modeling,  
  approaches to,   171  

  objectives,   168  

  principles,   116  

  WebApps,   213  

  MobileApps,   213   
   Requirements models (see also, 
Analysis models),   114  
  metrics,   659  

  types of,   167   
   Requirements quality,   454   

   Requirements speciﬁ
 cation, template for,   136   
   Requirements tasks,  
  elaboration,   135  

  elicitation,   134, 142  

  inception,   133  

  negotiation,   135  

  speciﬁ
 cation,   135  
  validation,   136   
   Requirements tracing,   631   
   Resources,   731  
  environmental,   732  

  human,   731  

  quality management,   452  

  reusable software,   732   
   Responsibilities,   193   

   Restructuring,   809  
  code,   809  

  data,   810  

  document,   804   
   Reusable software resources,  
 732   
   Reuse,   312   

   Reverse engineering,   805  
  data,   807  

  processing,   807  

  tools,   809  

  user interfaces,   808   
   Review  
  checklist,   439  

  guidelines,   442  

  issues list,   442  

  leader,   441  

  meeting,   441  

  metrics,   435  

  reporting,   442   
   Review information sheet (RIS),  
 790   
   Reviews,  
  architectural,   277  

  code,   433  

  conﬁ
 guration,   488  
  informal,   439  

  peer,   432  

  sample-driven,   444  

  software quality,   450  

  technical,   441   
   Risk  
  assessment,   777  
  categories,   779  

  components,   782  

  drivers,   782  

  estimation (see also risk 
 projection),   782  
  exposure,   786  

  identiﬁ
 cation,   780  
  impact,   785  

  information sheet,   790  

  item checklist,   781  

  patterns,   781  

  projection (see also risk 
 estimation),   782  
  reﬁ
 nement,   787   
   Risk management,   777  
  principles,   780  

  tools,   791  

  SPI,   827   
   Risk Mitigation, Monitoring, 
and Management 
(RMMM),   788, 790   
   Risk strategies,  
  proactive,   778  

  reactive,   778   
   Risk table,   783   

   Risks,   424  
  business,   779  

  known,   779  

  predictable,   779  

  product-speciﬁ
 c,   780  
  project,   779  

  technical,   779  

  unpredictable,   779       
   SafeHome,   143, 150  
  activity diagram,   220  

  analysis patterns,   209  

  applying patterns,   362  

  architectural assessment,  
 276  
  architectural decisions,   265  

  architecture context 
 diagram,   269  
  behavioral modeling,   157  

  
choosing an architecture,   262  
  class models,   190  

  cohesion in action,   297  

  communication mistakes,  
 111  
  conclusion,   862  

  considering agile process,   76  

  coupling in action,   298  

  CRC models,   197  

  data tree,   217  

  design classes,   241  

  design concepts,   239  

  design patterns,   356  

  design vs. coding,   227  

  domain analysis,   171  

  getting started,   26  

  grammatical parse,   186  

  graphic design,   377  
  instantiations of,   272  

  interface design review,   340  

  interface golden rules,   320  

  MobileApp requirements,  
 396  
  negotiation,   160  

  open closed principle,   293  

  preliminary user scenario,  
 174  
  quality issues,   424  

  requirements gathering,   145  

  screen layout,   334  

  selecting a model,   47, 50  

  sequence diagram,   206  

  state diagram,   205  

  swimlane diagram,   181  

  team structure,   93  

  use case diagram,   153  

  use case for UI design,   327  

  use case template,   178  

  user scenarios,   147   
   Safety,   451, 790  
  software,   460   
   Sample-driven reviews,   444   

   Sampling model,   612   

   Scenario-based testing,   532   

   Scope,   113, 134  
  software,   694   
   Scrum,   78  
  meetings,   79   
   Security and privacy,   586   

   Security assurance,   592   

   Security assurance case (see 
also, Trustworthiness),  

 592   
   Security engineering,   588  
  tools,   598  

  user-centered,   589   
   Security  
  case,   591  

  concerns, cross-cutting,   589  

  management,   451  

  correctness checks,   591  

  model,   590  

  objectives,   590  

  requirements elicitation,  
  
  quality aspects,   425   
   Self-adaptive systems,   158   

   Self-organizing teams,   692   

   Semantics, language,   901   

   Separation of concerns,   108, 234   

   Sequence diagrams,   205, 876   

   Service-oriented methods,   148   
   Services,   893   

   Six sigma,   458   

   Size-oriented metrics,   709   

   Smoke testing,   479   

   Social media,   95   

   Social media and privacy,   587   

   Software architecture, see 
Architecture   

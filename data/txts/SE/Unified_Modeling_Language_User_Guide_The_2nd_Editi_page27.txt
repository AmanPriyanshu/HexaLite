Components are discussed in Chapter 25. Sixth, a component is a physical and replaceable part of a system that conforms to and provides the realization of a set of interfaces. In a system, you'll encounter different kinds of deployment components, such as COM+ components or Java Beans, as well as components that are artifacts of the development process, such as source code files. A component typically represents the physical packaging of otherwise logical elements, such as classes, interfaces, and collaborations. Graphically, a component is rendered as a rectangle with tabs, usually including only its name, as in Figure 2-6. Figure 2-6 Components  Nodes are discussed in Chapter 26. Seventh, a node is a physical element that exists at run time and represents a computational resource, generally having at least some memory and, often, processing capability. A set of components may reside on a node and may also migrate from node to node. Graphically, a node is rendered as a cube, usually including only its name, as in Figure 2-7. Figure 2-7 Nodes  These seven elements#classes, interfaces, collaborations, use cases, active classes, components, and nodes#are the basic structural things that you may include in a UML model. There are also variations on these seven, such as actors, signals, and utilities (kinds of classes), processes and threads (kinds of active classes), and applications, documents, files, libraries, pages, and tables (kinds of components). Use cases, which are used to structure the behavioral things in a model, are discussed in Chapter 16; Interactions are discussed in Chapter 15. Behavioral Things   
˜˚˛˝˙ˆˇ˘˜˜
˜˛˜software measurement/metrics, 716Œ26, 727software platform, 57
software pricing, 670Œ72, 696
software product lines, 442, 446Œ52
software quality attributes, 704
software requirements specification (SRS), 126Œ29software safety arguments, 364Œ67
source code translation, 277
SourceForge, 476, 478
space shuttle (U.S.) system, 319
specialization, software product lines, 450
specifications (software specifications), 20, 54Œ56, 208Œ09, 300Œ02availability, 313
engineering definition and constraints, 23
functional requirements, 106Œ07
graphical notations, 121
dependability and, 300Œ02
design interface, 208Œ09
errors, 324Œ25
formal techniques, 300Œ02
hazard-driven safety requirements, 345
management of, 26
natural language requirements, 121Œ22
non-functional requirements, 110
problem analysis and, 133
reliability metrics, 313Œ14
risk-based requirements, 344, 345
safety requirements and, 344Œ45
software process, 44, 54Œ56
SRS document, 126Œ29
structured natural language requirements, 121, 122Œ24system failure and, 310
system requirements, 102Œ03, 120Œ29, 135
use cases, 125Œ26
user requirements, 102Œ03, 120, 135speculative generosity, 279
SPIN model checker, 358
spiral models, 48, 112, 256Œ57, 572
sprint (Scrum), 85, 86Œ87
SQL (Structured Query Language), 218, 399, 401, 445, 505stable domain abstractions, 475
staff allocation charts, 678, 680
stakeholders, 103Œ04, 107, 112Œ16
stand-alone applications, 25standardsdocumentation, 706
ISO 9000 standards framework, 708Œ10, 734
process, 45, 707, 708, 734
product, 706, 707
quality management (QM) and, 706Œ10, 727
software, 706Œ10, 727
service-oriented architectures (SOAs), 524,  525Œ26value of, 707Œ08
web service, 525Œ26state diagrams (UML), 141, 163, 205, 207Œ08
state machine models, 205, 207Œ08, 222, 617Œ18
state-based modeling, 156Œ58
static analyzers, 217
static metrics, 720Œ21
static models, 143, 205, 222
static perspective (RUP), 46
static program analysis, 359Œ61, 368
statistical testing, 332Œ33, 336
stimulus/response (embedded systems) model,  613Œ14, 634
storage management, 132, 740
stories, elicitation of requirements from, 118Œ20
story cards, 79Œ80, 99. See also user stories
stress testing, 248
structural models, 149Œ54, 163, 199, 205
structured arguments, 363Œ64
structured natural language requirements, 121,  122Œ24subsystem engineering, 571, 573
subsystem faults, 573
subsystem model, 205Œ06
Subversion system, 216, 735
support environment, 32
support services, 472
support software, 262
survivable systems analysis, 425Œ26
sustainable pace, 78
‚Swiss cheese™ model, 420Œ21
switch (case) statements, 279
system availability, see availability
system boundaries, 141Œ42, 163, 199, 556Œ57
system building, 731, 740Œ45, 753
system construction by composition, 543Œ44
system designactuator control processes, 613Œ14, 615
embedded systems, 217Œ18, 613Œ20
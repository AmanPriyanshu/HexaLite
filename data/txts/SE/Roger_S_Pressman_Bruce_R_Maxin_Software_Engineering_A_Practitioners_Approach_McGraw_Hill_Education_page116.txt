86 PART ONE  
THE SOFTWARE PROCESS
Iterative Development: A Manager's Guide, 
 Addison-Wesley, 2003) present a management 
overview and consider project management issues. Highsmith ( Agile Software Development 
Ecosystems, 
 Addison-Wesley, 2002) presents a survey of agile principles, processes, and 
practices. A worthwhile discussion of the delicate balance between agility and discipline is 
presented by Booch and his colleagues ( Balancing Agility and Discipline,  
Addison-Wesley, 
2004).   
 
Martin ( Clean Code: A Handbook of Agile Software Craftsmanship,
 
 Prentice Hall, 2009) 
presents the principles, patterns, and practices required to develop “clean code” in an 
agile software engineering environment. Lefﬁ ngwell ( 
Agile Software Requirements: Lean 
Requirements Practices for Teams, Programs, and the Enterprise
 
, Addison-Wesley, 2011) and 
( Scaling Software Agility: Best Practices for Large Enterprises,
 
 Addison-Wesley, 2007) dis-
cusses strategies for scaling up agile practices for large projects. Lippert and Rook ( Refac-toring in Large Software Projects: Performing Complex Restructurings Successfully,
 
 Wiley, 
2006) discuss the use of refactoring when applied in large, complex systems. Stamelos and 
Sfetsos ( Agile Software Development Quality Assurance,
 
 IGI Global, 2007) discuss SQA tech-
niques that conform to the agile philosophy. 
  
 
Dozens of books have been written about Extreme Programming over the past decade. Beck ( Extreme Programming Explained: Embrace Change,
 
 2nd ed., Addison-Wesley, 2004) 
remains the deﬁ nitive treatment of the subject. In addition, Jeffries and his colleagues 
( Extreme Programming Installed, 
 
Addison-Wesley, 2000), Succi and Marchesi ( 
Extreme 
Programming Examined,
 
 Addison-Wesley, 2001), Newkirk and Martin ( 
Extreme Program-
ming in Practice, 
 Addison-Wesley, 2001), and Auer and his colleagues ( 
Extreme Program-
ming Applied: Play to Win, 
 
Addison-Wesley, 2001) provide a nuts-and-bolts discussion of XP 
along with guidance on how best to apply it. McBreen ( Questioning Extreme Programming,
 
  Addison-Wesley, 2003) takes a critical look at XP, deﬁ
 ning when and where it is appropriate. 
An in-depth consideration of pair programming is presented by McBreen ( Pair Program-
ming Illuminated, 
 Addison-Wesley, 2003). 
  
 
Kohut ( Professional Agile Development Process: Real World Development Using SCRUM,
 
 Wrox, 2013), Rubin ( 
Essential Scrum: A Practical Guide to the Most Popular Agile Process
 
, Addison-Wesley, 2012), Larman and Vodde ( 
Scaling Lean and Agile Development: Thinking and Organizational Tools for Large Scale Scrum, 
 
Addison-Wesley, 2008), and Schwaber ( 
The Enterprise and Scrum, 
 Microsoft Press, 2007) discuss the use of Scrum for projects that have 
a major business impact. The nuts and bolts of Scrum are discussed by Cohn ( Succeeding with Agile 
, Addison-Wesley, 2009), and Schwaber and Beedle ( 
Agile Software Development 
with SCRUM, 
 Prentice-Hall, 2001). Worthwhile treatments of DSDM have been written by 
the DSDM Consortium ( DSDM: Business Focused Development,  
2nd ed., Pearson Education, 2003) and Stapleton ( DSDM: The Method in Practice, 
 Addison-Wesley, 1997). 
  
 
Books by Ambler and Lines ( Disciplined Agile Delivery: A Practitioner’s Guide to Agile 
 Delivery in the Enterprise 
, IBM Press, 2012) and Poppendieck and Poppendieck ( Lean  Development: An Agile Toolkit for Software Development Managers, 
 
Addison-Wesley, 2003) 
provide guidelines for managing and controlling agile projects. Ambler and Jeffries ( Agile Modeling, 
 Wiley, 2002) discuss AM in some depth. 
   
A wide variety of information sources on agile software development are available on the Internet. An up-to-date list of World Wide Web references that are relevant to the agile 

process can be found at the SEPA website:  
www.mhhe.com/pressman
 
.  
 
 
 pre22126_ch05_066-086.indd   86pre22126_ch05_066-086.indd   8613/12/13   6:10 PM13/12/13   6:10 PM
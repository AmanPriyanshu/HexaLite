 Note A node name may be text consisting of any number of letters, numbers, and certain punctuation marks (except for marks such as the colon, which is used to separate a node name and the name of its enclosing package) and may continue over several lines. In practice, node names are short nouns or noun phrases drawn from the vocabulary of the implementation.  Nodes and Components Components are discussed in Chapter 25. In many ways, nodes are a lot like components: Both have names; both may participate in dependency, generalization, and association relationships; both may be nested; both may have instances; both may be participants in interactions. However, there are some significant differences between nodes and components. · Components are things that participate in the execution of a system; nodes are things that execute components. · Components represent the physical packaging of otherwise logical elements; nodes represent the physical deployment of components. This first difference is the most important. Simply put, nodes execute components; components are things that are executed by nodes. Dependency relationships are discussed in Chapters 5 and 10. The second difference suggests a relationship among classes, components, and nodes. In particular, a component is the materialization of a set of other logical elements, such as classes and collaborations, and a node is the location upon which components are deployed. A class may 
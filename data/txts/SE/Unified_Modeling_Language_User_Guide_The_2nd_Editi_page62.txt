Figure 5-3 Generalization  A class may have zero, one, or more parents. A class that has no parents and one or more children is called a root class or a base class. A class that has no children is called a leaf class. A class that has exactly one parent is said to use single inheritance; a class with more than one parent is said to use multiple inheritance. Packages are discussed in Chapter 12. Most often, you will use generalizations among classes and interfaces to show inheritance relationships. In the UML, you can also create generalizations among other things#most notably, packages. Note A generalization can have a name, although names are rarely needed unless you have a model with many generalizations and you need to refer to or discriminate among generalizations.  Association Associations and dependencies (but not generalization relationships) may be reflective, as discussed in Chapter 10. An association is a structural relationship that specifies that objects of one thing are connected to objects of another. Given an association connecting two classes, you can navigate from an object 
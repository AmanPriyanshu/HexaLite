˜˜˚˝˜˜˜
˜˜
The problem here is that there are no absolutes when it comes to safety. Although the system may not have been validated according to predefined criteria, these 
 criteria may be too strict. The system may actually operate safely throughout its life
-time. It is also the case that, even when properly validated, the system may fail and 

cause an accident. Early disclosure of problems may result in damage to the employer 
and other employees; failure to disclose problems may result in damage to others.You must make up your own mind in these matters. The appropriate ethical posi-tion here depends on the views of the people involved. The potential for damage, the 
extent of the damage, and the people affected by the damage should influence the 
decision. If the situation is very dangerous, it may be justified to publicize it using 
the national press or social media. However, you should always try to resolve the 

situation while respecting the rights of your employer.Another ethical issue is participation in the development of military and nuclear 
systems. Some people feel strongly about these issues and do not wish to participate in 

any systems development associated with defense systems. Others will work on mili
-
tary systems but not on weapons systems. Yet others feel that national security is an 

overriding principle and have no ethical objections to working on weapons systems.In this situation, it is important that both employers and employees should make their views known to each other in advance. Where an organization is involved in 
military or nuclear work, it should be able to specify that employees must be willing 

to accept any work assignment. Equally, if an employee is taken on and makes clear 
that he or she does not wish to work on such systems, employers should not exert 
pressure to do so at some later date.The general area of ethics and professional responsibility is increasingly important 
as software-intensive systems pervade every aspect of work and everyday life. It can 

be considered from a philosophical standpoint where the basic principles of ethics are 

considered and software engineering ethics are discussed with reference to these 

basic principles. This is the approach taken by Laudon (Laudon 1995) and Johnson 

(Johnson 2001). More recent texts such as that by Tavani (Tavani 2013) introduce the 

notion of cyberethics and cover both the philosophical background and practical and 

legal issues. They include ethical issues for technology users as well as developers.I find that a philosophical approach is too abstract and difficult to relate to every-day experience so I prefer the more concrete approach embodied in professional 

codes of conduct (Bott 2005; Duquenoy 2007). I think that ethics are best discussed 
in a software engineering context and not as a subject in its own right. Therefore, I 

do not discuss software engineering ethics in an abstract way but include examples 

in the exercises that can be the starting point for a group discussion.To illustrate software engineering concepts, I use examples from four different types 

of system. I have deliberately not used a single case study, as one of the key messages 

in this book is that software engineering practice depends on the type of systems 

 Note A package name may be text consisting of any number of letters, numbers, and certain punctuation marks (except for marks such as the colon, which is used to separate a package name and the name of its enclosing package) and may continue over several lines. In practice, package names are short grouping nouns or noun phrases drawn from the vocabulary of the model.  Owned Elements Composition is discussed in Chapter 10. A package may own other elements, including classes, interfaces, components, nodes, collaborations, use cases, diagrams, and even other packages. Owning is a composite relationship, which means that the element is declared in the package. If the package is destroyed, the element is destroyed. Every element is uniquely owned by exactly one package. A package forms a namespace, which means that elements of the same kind must be named uniquely within the context of its enclosing package. For example, you can't have two classes named Queue owned by the same package, but you can have a class named Queue in package P1 and another (and different) class named Queue in package P2. The classes P1::Queue and P2::Queue are, in fact, different classes and can be distinguished by their path names. Different kinds of elements may have the same name. 
˜˚˛˝˙ˆˇ˘˜˜
˜˚ˇelicitation of requirements, 118Œ20layered architecture of, 179
photo sharing story, 118Œ20
services, 38Œ39
Virtual Learning Environment (VLE), 38directed systems, 588
distributed architectures, 171
distributed component systems, 501, 506Œ09, 517
distributed development (Scrum), 88
distributed systems (software engineering), 490Œ519advantages of, 491, 517
architectural design of, 171Œ72, 182
architectural patterns for, 175Œ84, 501Œ12, 517
attack defense, 494Œ95
client-server architecture, 180Œ82, 501,  503Œ06, 517client-server systems, 499Œ501, 517
CORBA (Common Object Request Broker  Architecture), 493, 507design issues, 492Œ96, 517
interaction models, 496Œ97
middleware, 498Œ99, 517
openness, 491, 492, 493
quality of service (QoS), 492, 495
scalability, 491, 492, 494, 514, 515Œ16
software as service (SaS), 512Œ16, 517
version management of, 735, 737Œ39diversity (software diversity)application types, 24Œ25
dependability and, 295Œ97, 303
fault-tolerant architecture, 318, 322, 323Œ25
redundancy and, 318, 398
reliability and, 318, 322, 323Œ25, 336
risk reduction and, 398
software engineering, 24Œ27documentation, 19, 40, 49, 56, 73Œ75, 92Œ93, 273agile methods and, 73Œ75, 86, 89Œ90, 92Œ93, 126
architectural design and, 175
certification and, 294, 299, 302
change implementation, 260
maintenance and, 92, 273
organization of, 127Œ28
reader requirements, 103Œ04
safety cases, 361Œ67
software requirements (SRS), 126Œ29, 135
standards, 129, 706
system release, 741, 752Œ53
TDD and, 244
user requirements, 73, 126Œ27domain-specific application systems, 438, 441, 446
duplicate code, 279
dynamic metrics, 720Œ21
dynamic model, 199, 205, 206, 222
dynamic perspective (RUP), 46
dynamic systems development method (DSDM), 73˙e-commerce systems, 188Œ89
early design model, 689Œ90
Eclipse environment, 32, 216, 218, 219
efficiency, 22, 422Œ23
effort cost, 669
effort distribution, 272
egoless programming, 83
elaboration phase (RUP), 46
elicit stakeholder requirements, 450
elicitation/analysis for requirements, 55, 112Œ20, 134embedded software systems, 25, 32, 634. See also real-time systemsarchitectural patterns and, 620Œ26, 634
design of, 217Œ18, 613Œ20
host-target development and, 217
real-time software engineering, 218, 610Œ37
simulators for, 217
stimulus/response model, 613Œ14, 634
timing analysis, 626Œ31
user testing, 251emergency call log, 422Œ23
emergency repair process, 260Œ61
emergent properties, 558, 559Œ61, 577
encryption, 413
enduring requirements, 132
engineering, see software engineering; systems  engineeringEnterprise Java Beans (EJB), 446, 466, 470, 507
Enterprise systems, 422, 552. See also ERP systemsentertainment systems, 25
environment assessment (legacy systems), 269
environmental adaptation, 271
environmental control pattern, 620, 623Œ25
environmental specialization (software product lines), 450
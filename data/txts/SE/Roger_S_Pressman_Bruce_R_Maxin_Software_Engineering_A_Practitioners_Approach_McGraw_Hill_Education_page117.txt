87  
 
KEY CONCEPTS     agile teams. . . . . . . 93  
    cloud computing  . . . 97  

    collaborative develop-

ment environments 
(CDEs)  . . . . . . . . . . 98  

    global teams. . . . . . 99  

    jelled team . . . . . . . 90  

    psychology. . . . . . . 89  

    roles  . . . . . . . . . . . 89  

    social media  . . . . . . 95  

    team attributes. . . . 90  

    team structures. . . . 92  

    team toxicity  . . . . . 91  

    traits  . . . . . . . . . . . 88  

    XP team. . . . . . . . . 94  
 HUMAN ASPECTS OF SOFTWARE
 ENGINEERING   
 In a special issue of  IEEE Software
 
, the guest editors [deS09] make the following observation:  
Software engineering has an abundance of techniques, tools, and methods de-signed to improve both the software development process and the ﬁ nal product. 
Technical improvements continue to emerge and yield encouraging results. How-

ever, software isn’t simply a product of the appropriate technical solutions applied 

inappropriate technical ways. Software is developed by people, used by people, 
and supports interaction among people. As such, human characteristics, behavior, 

and cooperation are central to practical software development.   
 
Throughout the chapters that follow this one, we’ll discuss the “techniques, tools, and methods” that will result in the creation of a successful software 
product. But before we do, it is essential to understand that without skilled 
and motivated people, success is unlikely. 
6   
 
 
 
CHAPTER 
 
What is it?   
We all tend to get 
caught up in the latest program-
ming language, the best new de-
sign methods, the most fashionable agile process, or a just released whiz-bang 
software tool. But at the end of the day,  
people 
 build computer software. And for that reason, 
the human aspects of software engineering 
often have as much to do with the success of a 
project as the latest and greatest technology. 
  
 
Who does it?   
Individuals and teams do soft-ware engineering work. In some cases, one 
person has much of the responsibility, but in 

most industry-grade software efforts, a team of 

people does the work.   
 
Why is it important?
   
A software team will 
be successful only if the dynamics of the team 

are right. Software engineers sometimes have 

a reputation of not playing well with others. In 

reality, it is essential for software engineers on a 

team to play well with their colleagues and with 

other stakeholders in the product to be built. 
  
 
What are the steps?   
First, you have to un-derstand the personal characteristics of a 
successful software engineer and then try to 

emulate them. Next, you should appreciate 
the complex psychology of software engineer-

ing work, so that you can navigate your way 
through a project without peril. Then, you have 
to understand the structure and dynamics of a 
software team, because team-based software 
engineering is common in an industry setting. 

Finally, you should appreciate the impact of 

social media, the cloud, and other collabora-
tive tools.   
 
What is the work product?
   
Better insight into the people, the process, and the end 
product.   
 
How do I ensure that I’ve done it right?   
Spend the time to observe how successful soft-
ware engineers do their work and tune your 
approach to take advantage of the strengths 
they project.   
 
 
 
 
 
 
 
QUICK LOOK pre22126_ch06_087-102.indd   87pre22126_ch06_087-102.indd   8713/12/13   6:10 PM13/12/13   6:10 PM
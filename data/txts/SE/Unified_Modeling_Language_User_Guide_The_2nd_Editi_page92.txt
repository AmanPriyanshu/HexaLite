several diagrams against the same model or different models, each hiding or exposing different sets of these elements and each showing different levels of detail. Basically, there are two ways to model a system at different levels of abstraction: by presenting diagrams with different levels of detail against the same model, or by creating models at different levels of abstraction with diagrams that trace from one model to another. To model a system at different levels of abstraction by presenting diagrams with different levels of detail, 路 Consider the needs of your readers, and start with a given model. 路 If your reader is using the model to construct an implementation, she'll need diagrams that are at a lower level of abstraction, which means that they'll need to reveal a lot of detail. If she is using the model to present a conceptual model to an end user, she'll need diagrams that are at a higher level of abstraction, which means that they'll hide a lot of detail. 路 Depending on where you land in this spectrum of low-to-high levels of abstraction, create a diagram at the right level of abstraction by hiding or revealing the following four categories of things from your model: 1. Building blocks and relationships:   Hide those that are not relevant to the intent of your diagram or the needs of your reader. 2. Adornments:   Reveal only the adornments of these building blocks and relationships that are essential to understanding your intent. 3. Flow:   In the context of behavioral diagrams, expand only those messages or transitions that are essential to understanding your intent. 4. Stereotypes:   In the context of stereotypes used to classify lists of things, such as attributes and operations, reveal only those stereotyped items that are essential to understanding your intent. Messages are discussed in Chapter 15; transitions are discussed in Chapter 21; stereotypes are discussed in Chapter 6. The main advantage of this approach is that you are always modeling from a common semantic repository. The main disadvantage of this approach is that changes from diagrams at one level of abstraction may make obsolete diagrams at a different level of abstraction. To model a system at different levels of abstraction by creating models at different levels of abstraction, Tracedependencies are discussed in Chapter 31. 路 Consider the needs of your readers and decide on the level of abstraction that each should view, forming a separate model for each level. 
The UML's structural diagrams are roughly organized around the major groups of things you'll find when modeling a system. 1. Class diagram  Classes, interfaces, and collaborations  2. Object diagram  Objects  3. Component diagram  Components  4. Deployment diagram  Nodes  Class diagrams are discussed in Chapter 8. Class Diagram   A class diagram shows a set of classes, interfaces, and collaborations and their relationships. Class diagrams are the most common diagram found in modeling object-oriented systems. You use class diagrams to illustrate the static design view of a system. Class diagrams that include active classes are used to address the static process view of a system. Object diagrams are discussed in Chapter 14 Object Diagram   An object diagram shows a set of objects and their relationships. You use object diagrams to illustrate data structures, the static snapshots of instances of the things found in class diagrams. Object diagrams address the static design view or static process view of a system just as do class diagrams, but from the perspective of real or prototypical cases. Component diagrams are discussed in Chapter 29. Component Diagram   A component diagram shows a set of components and their relationships. You use component diagrams to illustrate the static implementation view of a system. Component diagrams are related to class diagrams in that a component typically maps to one or more classes, interfaces, or collaborations. Deployment diagrams are discussed in Chapter 30. Deployment Diagram   A deployment diagram shows a set of nodes and their relationships. You use deployment diagrams to illustrate the static deployment view of an architecture. Deployment diagrams are related to component diagrams in that a node typically encloses one or more components. Note There are some common variants of these four diagrams, named after their primary contents. For example, you might create a subsystem diagram to illustrate the structural decomposition of a system into subsystems. A subsystem diagram is just a class diagram that contains, primarily, subsystems.  Behavioral Diagrams The UML's five behavioral diagrams are used to visualize, specify, construct, and document the dynamic aspects of a system. You can think of the dynamic aspects of a system as representing 
xxvi TABLE OF CONTENTS
CHAPTER 38 EMERGING TRENDS IN SOFTWARE ENGINEERING  839
38.1 Technology Evolution  840

38.2 Prospects for a True Engineering Discipline  841

38.3 Observing Software Engineering Trends  842

38.4 Identifying “Soft Trends”  843
38.4.1 Managing Complexity  845

38.4.2 Open-World Software  846

38.4.3 Emergent Requirements  846

38.4.4 The Talent Mix  847

38.4.5 Software Building Blocks  847

38.4.6 Changing Perceptions of “Value”  848

38.4.7 Open Source  848
38.5 Technology Directions  849
38.5.1 Process Trends  849

38.5.2 The Grand Challenge  851

38.5.3 Collaborative Development  852

38.5.4 Requirements Engineering  852

38.5.5 Model-Driven Software Development  853

38.5.6 Postmodern Design  854

38.5.7 Test-Driven Development  854
38.6 Tools-Related Trends  855

38.7 Summary  857

PROBLEMS AND POINTS TO PONDER  857FURTHER READINGS AND INFORMATION SOURCES  858CHAPTER 39 CONCLUDING COMMENTS  860
39.1 The Importance of Software—Revisited  861

39.2 People and the Way They Build Systems  861

39.3 New Modes for Representing Information  862

39.4 The Long View  864

39.5 The Software Engineer’s Responsibility  865

39.6 A Final Comment from RSP  867

APPENDIX 1 AN INTRODUCTION TO UML  869

APPENDIX 2 OBJECT-ORIENTED CONCEPTS  891

APPENDIX 3 FORMAL METHODS  899

REFERENCES  909
INDEX  933
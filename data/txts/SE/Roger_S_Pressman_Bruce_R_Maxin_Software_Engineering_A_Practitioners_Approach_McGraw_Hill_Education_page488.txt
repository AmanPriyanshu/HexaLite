458 PART THREE  
QUALITY MANAGEMENTthe vital few causes are determined, the software engineering organization can begin corrective action. For example, to correct MCC, you might implement re-
quirements gathering techniques (Chapter 8) to improve the quality of customer 
communication and speciﬁ cations. To improve EDR, you might acquire tools for 
data modeling and perform more stringent data design reviews.   It is important to note that corrective action focuses primarily on the vital few. 
As the vital few causes are corrected, new candidates pop to the top of the stack.  Statistical quality assurance techniques for software have been shown to pro-vide substantial quality improvement (e.g., [Rya11], [Art97]). In some cases, soft-
ware organizations have achieved a 50 percent reduction per year in defects 
after applying these techniques.  The application of the statistical SQA and the Pareto principle can be summa-rized in a single sentence:   Spend your time focusing on things that really matter, 
but ﬁ rst be sure that you understand what really matters!
 
  
 
 
 
21.6.2   
Six Sigma for Software Engineering 
 
Six Sigma is the most widely used strategy for statistical quality assurance in industry today. Originally popularized by Motorola in the 1980s, the Six Sigma 

strategy “is a rigorous and disciplined methodology that uses data and statisti-
cal analysis to measure and improve a company’s operational performance by 

identifying and eliminating defects in manufacturing and service-related pro-
cesses” [ISI08]. The term  Six Sigma 
 is derived from six standard deviations—3.4 
instances (defects) per million occurrences—implying an extremely high-quality 
standard. The Six Sigma methodology deﬁ nes three core steps: 
 
 
 
  
 
 
 
 
•   
Deﬁ ne
 
 customer requirements and deliverables and project goals via well-deﬁ ned methods of customer communication. 
  
 
 
•   
Measure
 
 the existing process and its output to determine current quality performance (collect defect metrics).   
 
 
•   
Analyze 
 defect metrics and determine the vital few causes.    
If an existing software process is in place, but improvement is required, Six Sigma suggests two additional steps:  
 
 
•   
Improve
 
 the process by eliminating the root causes of defects.   
 
 
•   
Control
 
 the process to ensure that future work does not reintroduce the causes of defects.  
 
  These core and additional steps are sometimes referred to as the DMAIC (de-ﬁ ne, measure, analyze, improve, and control) method. 
 If an organization is developing a software process (rather than improving an existing process), the core steps are augmented as follows:  
 
 
•   
Design 
 the process to (1) avoid the root causes of defects and (2) to meet customer requirements.   What are the 
core steps of the Six Sigma 
methodology? ?pre22126_ch21_448-465.indd   458pre22126_ch21_448-465.indd   45813/12/13   10:02 PM13/12/13   10:02 PM
Other, more exotic, forms of messaging, such as balking and time out, can be modeled by defining an appropriate message stereotype.  Creation, Modification, and Destruction Constraints are discussed in Chapter 6. Most of the time, the objects you show participating in an interaction exist for the entire duration of the interaction. However, in some interactions, objects may be created (specified by a create message) and destroyed (specified by a destroy message). The same is true of links: the relationships among objects may come and go. To specify if an object or link enters and/or leaves during an interaction, you can attach one of the following constraints to the element: $ new  Specifies that the instance or link is created during execution of the enclosing interaction $ destroyed  Specifies that the instance or link is destroyed prior to completion of execution of the enclosing interaction $ transient  Specifies that the instance or link is created during execution of the enclosing interaction but is destroyed before completion of execution Lifelines are discussed in Chapter 18; the become stereotype is discussed in Chapter 13. During an interaction, an object typically changes the values of its attributes, its state, or its roles. You can represent the modification of an object by replicating the object in the interaction (with possibly different attribute values, state, or roles). On a sequence diagram, you'd place each variant of the object on the same lifeline. In an interaction diagram, you'd connect each variant with a become message. Representation When you model an interaction, you typically include both objects (each one playing a specific role) and messages (each one representing the communication between objects, with some resulting action). Interaction diagrams are discussed in Chapter 18. You can visualize those objects and messages involved in an interaction in two ways: by emphasizing the time ordering of its messages, and by emphasizing the structural organization of the objects that send and receive messages. In the UML, the first kind of representation is called a sequence diagram; the second kind of representation is called a collaboration diagram. Both sequence diagrams and collaboration diagrams are kinds of interaction diagrams. Sequence diagrams and collaboration diagrams are largely isomorphic, meaning that you can take one and transform it into the other without loss of information. There are some visual differences, however. First, sequence diagrams permit you to model the lifeline of an object. An object's lifeline represents the existence of the object at a particular time, possibly covering the object's creation and destruction. Second, collaboration diagrams permit you to model the structural links that may exist among the objects in an interaction. Common Modeling Techniques Modeling a Flow of Control 
Requirements Set    This set groups all information describing what the system must do. This may comprise a use case model, a nonfunctional requirements model, a domain model, an analysis model, and other forms of expression of the user's needs, including but not limited to mock-ups, interface prototypes, regulatory constraints, and so on. Design Set    This set groups information describing how the system is to be constructed and captures decisions about how the system is to be built, taking into account all the constraints of time, budget, legacy, reuse, quality objectives, and so forth. This may comprise a design model, a test model, and other forms of expression of the system's nature, including but not limited to prototypes and executable architectures. Implementation Set    This set groups all information about the elements of the software that comprises the system, including but not limited to source code in various programming languages, configuration files, data files, software components, and so on, together with the information describing how to assemble the system. Deployment Set    This set groups all information about the way the software is actually packaged, shipped, installed, and run on the target environment. Glossary abstract class  A class that cannot be directly instantiated.  abstraction  The essential characteristics of an entity that distinguish it from all other kinds of entities. An abstraction defines a boundary relative to the perspective of the viewer.  action  An executable atomic computation that results in a change in state of the system or the return of a value.  action expression  An expression that evaluates to a collection of actions.  action state  A state that represents the execution of an atomic action, typically the invocation of an operation.  activation  
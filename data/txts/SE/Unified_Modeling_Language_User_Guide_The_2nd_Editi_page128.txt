Figure 10-4 Visibility  Attributes are discussed in Chapters 4 and 9. Qualification   In the context of an association, one of the most common modeling idioms you'll encounter is the problem of lookup. Given an object at one end of an association, how do you identify an object or set of objects at the other end? For example, consider the problem of modeling a work desk at a manufacturing site at which returned items are processed to be fixed. As Figure 10-5 shows, you'd model an association between two classes, WorkDesk and ReturnedItem. In the context of the WorkDesk, you'd have a jobId that would identify a particular ReturnedItem. In that sense, jobId is an attribute of the association. It's not a feature of ReturnedItem because items really have no knowledge of things like repairs or jobs. Then, given an object of WorkDesk and given a particular value for jobId, you can navigate to zero or one objects of ReturnedItem. In the UML, you'd model this idiom using a qualifier, which is an association attribute whose values partition the set of objects related to an object across an association. You render a qualifier as a small rectangle attached to the end of an association, placing the attributes in the rectangle, as the figure shows. The source object, together with the values of the qualifier's attributes, yield a target object (if the target multiplicity is at most one) or a set of objects (if the target multiplicity is many). Figure 10-5 Qualification  Note Qualifiers have some fairly deep semantics, and there are a number of complicated fringe cases in which you'll find them. However, most of the time, the circumstances for which you'll need qualifiers are pretty straightforward. If you can devise a lookup data structure at one end of an association (for example, a hash table or b-tree), then manifest that index as a qualifier. In most cases, the source end's multiplicity will be many and the target end's multiplicity will be 0..1.  Roles are discussed in Chapter 4; interfaces are discussed in Chapter 11; classifiers are discussed in Chapter 9. Interface Specifier   
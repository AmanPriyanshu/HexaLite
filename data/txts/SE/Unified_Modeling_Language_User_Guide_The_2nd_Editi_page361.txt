9. Deployment diagram  A structural diagram that shows a set of nodes and their relationships Appendix B. UML Standard Elements The UML's extensibility mechanisms are discussed in Chapter 6. The UML provides a standard language for writing software blueprints. However, no language could ever be sufficient to express all nuances of all models across all domains for all time. The UML is therefore designed to be opened-ended, making it possible for you to extend the language in controlled ways. The UML's extensibility mechanisms include · Stereotypes · Tagged values · Constraints A stereotype extends the vocabulary of the UML, allowing you to create new kinds of building blocks that are derived from existing ones but are specific to your problem. A tagged value extends the properties of a UML building block, allowing you to create new information in that element's specification. A constraint extends the semantics of a UML building block, allowing you to add new rules or modify existing ones. Collectively, these three extensibility mechanisms allow you to shape and to grow the UML to your project's needs. These mechanisms also let the UML adapt to new software technology, such as the likely emergence of more- powerful distributed programming languages and the impact of fusion with hardware modeling languages for modeling systems. You can add new building blocks, modify the specification of existing ones, and even change their semantics. Naturally, it's important that you do so in controlled ways so that through these extensions, you remain true to the UML's purpose, namely, the communication of information. You can use the UML without ever needing these extensibility mechanisms. In fact, by treating variants of the UML's building blocks as extensions, the core of the UML is made smaller and simpler. However, as you build more-complex models and need to visualize or specify certain subtle, yet important, semantics, you'll find yourself using a few stereotypes, tagged values, and constraints over and over again. Some extensions are so common that they have been defined in the UML as standard elements. This appendix describes these standard elements. Stereotypes The following stereotypes are defined as standard elements of the UML. For each stereotype, the following table gives its name, the symbol of the UML to which it applies, and its meaning. Note Some items in this table are technically not stereotypes; they are standard keywords. The distinction is subtle. In the UML's metamodel, items such as trace are manifest, meaning that they are an explicit part of the metamodel and so are not really stereotypes. From the perspective of the developer, however, you still render them by using stereotype notation. These items are specified as standard keywords in order to 
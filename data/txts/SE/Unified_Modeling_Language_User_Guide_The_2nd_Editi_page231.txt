          return Point(x, y);           } There's a bit of cleverness here, involving the declaration of the two local variables. A less-sophisticated tool might have first declared the two variables and then set their values. Reverse engineering (the creation of a model from code) is also possible for activity diagrams, especially if the context of the code is the body of an operation. In particular, the previous diagram could have been generated from the implementation of the class Line. More interesting than the reverse engineering of a model from code is the animation of a model against the execution of a deployed system. For example, given the previous diagram, a tool could animate the action states in the diagram as they were dispatched in a running system. Even better, with this tool also under the control of a debugger, you could control the speed of execution, possibly setting breakpoints to stop the action at interesting points in time to examine the attribute values of individual objects. Hints and Tips When you create activity diagrams in the UML, remember that activity diagrams are just projections on the same model of a system's dynamic aspects. No single activity diagram can capture everything about a system's dynamic aspects. Rather, you'll want to use many activity diagrams to model the dynamics of a workflow or an operation. A well-structured activity diagram · Is focused on communicating one aspect of a system's dynamics. · Contains only those elements that are essential to understanding that aspect. · Provides detail consistent with its level of abstraction; you expose only those adornments that are essential to understanding. · Is not so minimalist that it misinforms the reader about important semantics. When you draw an activity diagram, · Give it a name that communicates its purpose. · Start with modeling the primary flow. Address branching, concurrency, and object flow as secondary considerations, possibly in separate diagrams. · Lay out its elements to minimize lines that cross. · Use notes and color as visual cues to draw attention to important features of your diagram. Part V: Advanced Behavioral Modeling 
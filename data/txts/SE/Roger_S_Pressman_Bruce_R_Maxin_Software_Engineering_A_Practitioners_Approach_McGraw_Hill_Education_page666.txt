636
 PART THREE  
QUALITY MANAGEMENT
 
 
 
Bach recognizes that we face a balancing act. Too much change control and we 
create problems. Too little, and we create other problems. 
 
 
 
For a large software project, uncontrolled change rapidly leads to chaos. For 
such projects, change control combines human procedures and automated tools 
to provide a mechanism for the control of change. The change control process is 
illustrated schematically in  
Figure 29.5 
 
 
. A  
change request
 
 is submitted and eval-
uated to assess technical merit, potential side effects, overall impact on other 
conﬁ
 guration objects and system functions, and the projected cost of the change. 
The results of the evaluation are presented as a  
change report,
 
 which is used by 
a  
change control authority
 
 (CCA)—a person or group that makes a ﬁ
 nal decision 
   It should be noted that 
a number of change 
requests may be 
combined to result in 
a single ECO and that 
ECOs typically result 
in changes to multiple 
conﬁ guration objects. 
Need for change is recognized
Change request from user
Developer evaluates
Change report is generated
Change control authority decides
Request is queued for action, ECO generated
Assign individuals to configuration objects
ﬁCheck outﬂ configuration objects (items)
Make the change
Review (audit) the change
ﬁCheck inﬂ the configuration items that have been changed
Establish a baseline for testing
Perform quality assurance and testing activities
ﬁPromoteﬂ changes for inclusion in next release (revision)
Rebuild appropriate version of software
Review (audit) the change to all configuration items
Include changes in new version
Distribute the new version
Change request is denied
User is informed
 
F
IGURE
 29.5
 
The change 
control process
p
r
e
2
2
1
2
6
_
c
h
2
9
_
6
2
3
-
6
5
2
.
i
n
d
d
 
 
 
6
3
6
pre22126_ch29_623-652.indd   636
1
3
/
1
2
/
1
3
 
 
 
6
:
1
6
 
P
M
13/12/13   6:16 PM

˜˜˚˛˝˙ˆˇ˘
˜high-availability systems, 172, 218honesty (people management), 653
host-target development, 213, 216Œ18, 222
HTML5 programming, 28, 445
http and https protocols, 530Œ31
human error, 307, 351Œ52, 418Œ21
human needs hierarchy, 653Œ54IDEs (Interactive Development Environments),  53, 217ECLIPSE environment and, 218
general-purpose, 218
host-target development and, 216, 217Œ18, 222
repository architecture for, 180iLearn, 38Œ39, 567. See also digital learning  environmentimplementation (system implementation), 28, 47, 56Œ58, 69, 196Œ225components, 465, 466, 471Œ72, 475, 487
configuration management, 212, 215Œ16
design and, 56Œ58, 69, 196Œ225
interface specification, 208Œ09
life-cycle phase, 47
host-target development, 213, 216Œ18
open-source development, 219Œ21
reuse and, 212, 213Œ215
service deployment and, 540Œ41
service-oriented software for, 28
UML documentation, 197, 198Œ209
unit testing and, 47in-car information system, 522Œ24
inception phase (RUP), 46
inclusion (people management), 653, 657
incompatibility, component composition and,  481Œ83incremental delivery, 46, 51, 62, 64Œ65, 76, 91incremental development, 46, 50Œ51, 73Œ74, 77
incremental testing, 59, 242
incremental integration, 242
incremental planning, 78
information loss, 286
information systems, 32, 185Œ86, 187Œ89, 522Œ24
infrastructure security, 374, 375Œ76inheritance, 152, 204, 209, 233, 722. See also  generalizationinput/output mapping, 310Œ11
inputs, validity checks of, 326Œ27, 399
inspections, 229Œ30, 239, 710Œ714. See also reviewsinsulin pump control system, 32Œ34activity model of, 33, 155
data-flow model (DMD) for, 155
dependability properties for, 288Œ89
failure in, 316Œ17
functional reliability requirements, 317
hardware components (diagram), 33
hazards in, 346
natural language specification for, 122
non-functional reliability requirements, 316Œ17
permanent software failure, 316
risk classification for, 347Œ49
risk reduction for, 351Œ52
safety-critical system control, 341
safety requirements for, 346Œ349, 351Œ52
safe state, 351
sequence diagrams for, 155
software control of, 341
software failure solutions, 351Œ52
structured language specification for, 123Œ24
tabular specification for, 124
transient software failure, 316issue-tracking systems, 746Œ47
integrated application systems, 442, 454
integrationconfiguration and, 46, 52Œ54
continuous, 78, 742Œ43
system development and, 570
system testing and, 48
systems of systems (SoS), 595, 597Œ99integrity, security and, 374, 413
intellectual property rights, 28
interacting workflows, 545Œ46
interaction models, 144Œ49, 163, 199Œ200, 496Œ97distributed systems, 496Œ97
object-oriented design and, 199Œ200
sequence diagrams, 146Œ49, 163
use cases, 144Œ46, 163, 200interactive applications, 25
interface design, 57, 208Œ09
interface misunderstanding, 238
interface misuse, 238
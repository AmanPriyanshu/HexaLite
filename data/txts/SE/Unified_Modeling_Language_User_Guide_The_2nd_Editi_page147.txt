Every large system is layered in this way. In fact, about the only way you can understand a complex system is by chunking your abstractions into ever-larger groups. Most of these modest-size chunks (such as room) are, in their own right, class-like abstractions for which there are many instances. Most of these larger chunks are purely conceptual (such as retail wing), for which there are no real instances. They never manifest themselves in the physical system but, rather, exist for the sole purpose of understanding the system itself. These latter kinds of chunks have no identity in the deployed system; they have identity only in the model of the system. Software architecture is discussed in Chapter 2; modeling the architecture of a system is discussed in Chapter 31. In the UML, the chunks that organize a model are called packages. A package is a general-purpose mechanism for organizing elements into groups. Packages help you organize the elements in your models so that you can more easily understand them. Packages also let you control access to their contents so that you can control the seams in your system's architecture. The UML provides a graphical representation of package, as Figure 12-1 shows. This notation permits you to visualize groups of elements that can be manipulated as a whole and in a way that lets you control the visibility of and access to individual elements. Figure 12-1 Packages  Terms and Concepts A package is a general-purpose mechanism for organizing elements into groups. Graphically, a package is rendered as a tabbed folder. Names A package name must be unique within its enclosing package. Every package must have a name that distinguishes it from other packages. A name is a textual string. That name alone is known as a simple name; a path name is the package name prefixed by the name of the package in which that package lives, if any. A package is typically drawn showing only its name, as in Figure 12-2. Just as with classes, you may draw packages adorned with tagged values or with additional compartments to expose their details. Figure 12-2 Simple and Extended Package 